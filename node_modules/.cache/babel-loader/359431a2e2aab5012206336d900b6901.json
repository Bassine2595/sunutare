{"ast":null,"code":"import \"antd/es/skeleton/style\";\nimport _Skeleton from \"antd/es/skeleton\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/alert/style\";\nimport _Alert from \"antd/es/alert\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Index.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { PresentationLayout } from \"./Shared/PresentationLayout\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { UserContext } from \"./Context\";\nimport { EMPLOYERSBYWORKSHOPID } from \"../Gql/Query\";\nimport manager from \"../imgs/manager.svg\";\nimport employer from \"../imgs/office-worker.svg\";\nimport { ButtonLogin, ButtonCancel } from \"./Shared/Button\";\nimport { useModal } from \"../hooks/useModal\";\nimport { FormItemPassword } from \"./Shared/Input\";\nimport { useForm } from \"antd/lib/form/util\";\nimport { CHECKPASSWORD } from \"../Gql/Mutation\";\nimport { useHistory } from \"react-router-dom\";\nconst {\n  Title\n} = _Typography;\n\nconst Profil = ({\n  id,\n  fullName,\n  isManager = false,\n  onSelected\n}) => {\n  return /*#__PURE__*/React.createElement(_Card, {\n    size: \"small\",\n    extra: /*#__PURE__*/React.createElement(_Tag, {\n      color: \"#1DA57A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }\n    }, isManager ? \"Directeur\" : \"EmployÃ©\"),\n    onClick: () => onSelected(id),\n    cover: /*#__PURE__*/React.createElement(\"img\", {\n      alt: fullName,\n      src: isManager ? manager : employer,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }),\n    hoverable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Card.Meta, {\n    title: fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst CheckPassword = ({\n  user,\n  visible,\n  onCancel,\n  onCheck\n}) => {\n  const [form] = useForm();\n  const [message, setMessage] = useState(\"\");\n  const [checkPassword, {\n    loading\n  }] = useMutation(CHECKPASSWORD);\n\n  const onFinishi = password => {\n    checkPassword({\n      variables: {\n        password,\n        id: user\n      }\n    }).then(({\n      data: {\n        checkPassword: {\n          jwtToken\n        }\n      }\n    }) => {\n      if (jwtToken) {\n        onCheck(jwtToken);\n      } else {\n        setMessage(\"Mauvais mot de passe !\");\n      }\n    }).catch(error => {\n      console.log(error);\n      setMessage(\"Une erreur est survenue !\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(_Modal, {\n    closable: false,\n    title: \"Se connecter\",\n    visible: visible,\n    footer: [/*#__PURE__*/React.createElement(ButtonLogin, {\n      loading: loading,\n      key: \"login\",\n      onClick: () => {\n        form.validateFields().then(({\n          password\n        }) => onFinishi(password)).catch(info => {\n          console.log(\"Validate Failed:\", info);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ButtonCancel, {\n      key: \"cancel\",\n      onClick: onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, message !== \"\" && /*#__PURE__*/React.createElement(_Alert, {\n    message: message,\n    type: \"info\",\n    showIcon: true,\n    closable: true,\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemPassword, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Index = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const history = useHistory();\n  const {\n    data,\n    loading\n  } = useQuery(EMPLOYERSBYWORKSHOPID, {\n    variables: {\n      workshopId: user.workshop.id\n    }\n  });\n  const [current, setCurrent] = useState(null);\n  const [visible, toggle] = useModal();\n\n  const onCheck = token => {\n    toggle();\n    localStorage.setItem(\"user\", token);\n    history.push(\"/employer/service\");\n  };\n\n  return /*#__PURE__*/React.createElement(PresentationLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Qui est-ce ?\")), /*#__PURE__*/React.createElement(_Skeleton, {\n    loading: loading,\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    sm: 12,\n    md: 8,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Profil, {\n    onSelected: id => {\n      setCurrent(id);\n      toggle();\n    },\n    isManager: true,\n    id: user.workshop.id,\n    fullName: `${user.gender}. ${user.firstName} ${user.lastName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })), data === null || data === void 0 ? void 0 : data.employers.nodes.map(({\n    id,\n    fullName\n  }) => /*#__PURE__*/React.createElement(_Col, {\n    key: id,\n    xs: 24,\n    sm: 12,\n    md: 8,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Profil, {\n    onSelected: id => {\n      setCurrent(id);\n      toggle();\n    },\n    id: id,\n    fullName: fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }))))), current && /*#__PURE__*/React.createElement(CheckPassword, {\n    onCheck: onCheck,\n    user: current,\n    visible: visible,\n    onCancel: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Index.tsx"],"names":["React","useContext","useState","PresentationLayout","useQuery","useMutation","UserContext","EMPLOYERSBYWORKSHOPID","ButtonLogin","ButtonCancel","useModal","FormItemPassword","useForm","CHECKPASSWORD","useHistory","Title","Profil","id","fullName","isManager","onSelected","manager","employer","CheckPassword","user","visible","onCancel","onCheck","form","message","setMessage","checkPassword","loading","onFinishi","password","variables","then","data","jwtToken","catch","error","console","log","validateFields","info","marginBottom","Index","history","workshopId","workshop","current","setCurrent","toggle","token","localStorage","setItem","push","textAlign","gender","firstName","lastName","employers","nodes","map"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { PresentationLayout } from \"./Shared/PresentationLayout\";\nimport {\n  Row,\n  Col,\n  Card,\n  Typography,\n  Skeleton,\n  Tag,\n  Modal,\n  Form,\n  Alert,\n} from \"antd\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { UserContext } from \"./Context\";\nimport { EMPLOYERSBYWORKSHOPID } from \"../Gql/Query\";\nimport manager from \"../imgs/manager.svg\";\nimport employer from \"../imgs/office-worker.svg\";\nimport { ButtonLogin, ButtonCancel } from \"./Shared/Button\";\nimport { useModal } from \"../hooks/useModal\";\nimport { FormItemPassword } from \"./Shared/Input\";\nimport { useForm } from \"antd/lib/form/util\";\nimport { CHECKPASSWORD } from \"../Gql/Mutation\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { Title } = Typography;\n\ninterface ProfilProps {\n  id: string;\n  fullName: string;\n  isManager?: boolean;\n  onSelected: (id: string) => void;\n}\n\ninterface CheckPasswordProps {\n  user: string;\n  visible: boolean;\n  onCancel: () => void;\n  onCheck: (token: string) => void;\n}\n\nconst Profil = ({\n  id,\n  fullName,\n  isManager = false,\n  onSelected,\n}: ProfilProps) => {\n  return (\n    <Card\n      size=\"small\"\n      extra={<Tag color=\"#1DA57A\">{isManager ? \"Directeur\" : \"EmployÃ©\"}</Tag>}\n      onClick={() => onSelected(id)}\n      cover={\n        <img alt={fullName} src={isManager ? manager : employer} height={200} />\n      }\n      hoverable\n    >\n      <Card.Meta title={fullName} />\n    </Card>\n  );\n};\n\nconst CheckPassword = ({\n  user,\n  visible,\n  onCancel,\n  onCheck,\n}: CheckPasswordProps) => {\n  const [form] = useForm();\n  const [message, setMessage] = useState(\"\");\n  const [checkPassword, { loading }] = useMutation(CHECKPASSWORD);\n\n  const onFinishi = (password) => {\n    checkPassword({ variables: { password, id: user } })\n      .then(\n        ({\n          data: {\n            checkPassword: { jwtToken },\n          },\n        }) => {\n          if (jwtToken) {\n            onCheck(jwtToken);\n          } else {\n            setMessage(\"Mauvais mot de passe !\");\n          }\n        }\n      )\n      .catch((error) => {\n        console.log(error);\n        setMessage(\"Une erreur est survenue !\");\n      });\n  };\n\n  return (\n    <Modal\n      closable={false}\n      title=\"Se connecter\"\n      visible={visible}\n      footer={[\n        <ButtonLogin\n          loading={loading}\n          key=\"login\"\n          onClick={() => {\n            form\n              .validateFields()\n              .then(({ password }) => onFinishi(password))\n              .catch((info) => {\n                console.log(\"Validate Failed:\", info);\n              });\n          }}\n        />,\n        <ButtonCancel key=\"cancel\" onClick={onCancel} />,\n      ]}\n    >\n      {message !== \"\" && (\n        <Alert\n          message={message}\n          type=\"info\"\n          showIcon\n          closable\n          style={{ marginBottom: 10 }}\n        />\n      )}\n      <Form form={form}>\n        <FormItemPassword />\n      </Form>\n    </Modal>\n  );\n};\n\nconst Index = () => {\n  const { user } = useContext(UserContext);\n  const history = useHistory();\n  const { data, loading } = useQuery(EMPLOYERSBYWORKSHOPID, {\n    variables: { workshopId: user.workshop.id },\n  });\n  const [current, setCurrent] = useState(null);\n  const [visible, toggle] = useModal();\n\n  const onCheck = (token: string) => {\n    toggle();\n    localStorage.setItem(\"user\", token);\n    history.push(\"/employer/service\");\n  };\n\n  return (\n    <PresentationLayout>\n      <div style={{ textAlign: \"center\" }}>\n        <Title>Qui est-ce ?</Title>\n      </div>\n      <Skeleton loading={loading} active>\n        <Row justify=\"center\" gutter={[12, 12]}>\n          <Col xs={24} sm={12} md={8} lg={6}>\n            <Profil\n              onSelected={(id) => {\n                setCurrent(id);\n                toggle();\n              }}\n              isManager={true}\n              id={user.workshop.id}\n              fullName={`${user.gender}. ${user.firstName} ${user.lastName}`}\n            />\n          </Col>\n          {data?.employers.nodes.map(({ id, fullName }) => (\n            <Col key={id} xs={24} sm={12} md={8} lg={6}>\n              <Profil\n                onSelected={(id) => {\n                  setCurrent(id);\n                  toggle();\n                }}\n                id={id}\n                fullName={fullName}\n              />\n            </Col>\n          ))}\n        </Row>\n      </Skeleton>\n      {current && (\n        <CheckPassword\n          onCheck={onCheck}\n          user={current}\n          visible={visible}\n          onCancel={toggle}\n        />\n      )}\n    </PresentationLayout>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}