{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Customer.tsx\";\nimport React, { useContext } from \"react\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { UserContext } from \"../../Context\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CUSTOMERSBYWORKSHOPID } from \"../../../Gql/Query\";\nimport { Display } from \"./Display\";\nexport const Customer = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(CUSTOMERSBYWORKSHOPID, {\n    variables: {\n      workshopId: user.workshop.id,\n      all: true\n    }\n  });\n  if (data) console.log(data);\n  return /*#__PURE__*/React.createElement(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_List, {\n    rowKey: \"id\",\n    dataSource: data === null || data === void 0 ? void 0 : data.customers.nodes,\n    renderItem: (customer, key) => {\n      return /*#__PURE__*/React.createElement(Display, Object.assign({}, customer, {\n        numberServicesByYear: data === null || data === void 0 ? void 0 : data.numberServicesByYears.nodes[0].count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Customer.tsx"],"names":["React","useContext","Theme","UserContext","useQuery","CUSTOMERSBYWORKSHOPID","Display","Customer","user","data","loading","refetch","variables","workshopId","workshop","id","all","console","log","customers","nodes","customer","key","numberServicesByYears","count"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAA4C,OAA5C;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAWA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,SAASC,OAAT,QAAwB,WAAxB;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAWP,UAAU,CAACE,WAAD,CAA3B;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BP,QAAQ,CAACC,qBAAD,EAAwB;AACjEO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAEL,IAAI,CAACM,QAAL,CAAcC,EAA5B;AAAgCC,MAAAA,GAAG,EAAE;AAArC;AADsD,GAAxB,CAA3C;AAIA,MAAIP,IAAJ,EAAUQ,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEV,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,MAAM,EAAC,IADT;AAEE,IAAA,UAAU,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU,SAAN,CAAgBC,KAF9B;AAGE,IAAA,UAAU,EAAE,CAACC,QAAD,EAAgBC,GAAhB,KAAwB;AAClC,0BACE,oBAAC,OAAD,oBACMD,QADN;AAEE,QAAA,oBAAoB,EAClBZ,IADkB,aAClBA,IADkB,uBAClBA,IAAI,CAAEc,qBAAN,CAA4BH,KAA5B,CAAkC,CAAlC,EAAqCI,KAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAoBD,CA5BM","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Theme } from \"../../Shared/Layout\";\nimport {\n  Row,\n  Col,\n  PageHeader,\n  message,\n  List,\n  Button,\n  Skeleton,\n  Card,\n} from \"antd\";\nimport { UserContext } from \"../../Context\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CUSTOMERSBYWORKSHOPID } from \"../../../Gql/Query\";\nimport { Display } from \"./Display\";\nimport { FilterForm } from \"../Service/Form\";\n\nexport const Customer = () => {\n  const { user } = useContext(UserContext);\n  const { data, loading, refetch } = useQuery(CUSTOMERSBYWORKSHOPID, {\n    variables: { workshopId: user.workshop.id, all: true },\n  });\n\n  if (data) console.log(data);\n\n  return (\n    <Theme>\n      <Card>\n        <List\n          rowKey=\"id\"\n          dataSource={data?.customers.nodes}\n          renderItem={(customer: any, key) => {\n            return (\n              <Display\n                {...customer}\n                numberServicesByYear={\n                  data?.numberServicesByYears.nodes[0].count\n                }\n              />\n            );\n          }}\n        />\n      </Card>\n    </Theme>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}