{"ast":null,"code":"import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/descriptions/style\";\nimport _Descriptions from \"antd/es/descriptions\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/progress/style\";\nimport _Progress from \"antd/es/progress\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/dropdown/style\";\nimport _Dropdown from \"antd/es/dropdown\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/carousel/style\";\nimport _Carousel from \"antd/es/carousel\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/Display.tsx\";\nimport React, { useState } from \"react\";\nimport { ScissorOutlined, EyeOutlined, SmallDashOutlined, EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nexport const ServiceResume = ({\n  onClickBegin,\n  onClickShow,\n  onClickEdit,\n  onClickFollow,\n  ...service\n}) => {\n  const {\n    id,\n    code,\n    modele,\n    imageFile,\n    progress,\n    isStarded,\n    isOver,\n    noExtra\n  } = service;\n  const [type, setType] = useState(\"modele\");\n  return /*#__PURE__*/React.createElement(_Card, {\n    size: \"small\",\n    key: id,\n    title: /*#__PURE__*/React.createElement(_Tag, {\n      color: \"#1DA57A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }\n    }, `Code service: ${code}`),\n    cover: /*#__PURE__*/React.createElement(_Carousel, {\n      autoplay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, type === \"modele\" && modele.imageFile.length > 0 ? modele.imageFile.map(({\n      url,\n      name\n    }, key) => /*#__PURE__*/React.createElement(\"img\", {\n      key: key,\n      alt: name,\n      height: 300,\n      src: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    })) : imageFile.length > 0 && imageFile.map(({\n      url,\n      name\n    }, key) => /*#__PURE__*/React.createElement(\"img\", {\n      key: key,\n      alt: name,\n      height: 300,\n      src: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }))),\n    extra: !noExtra && /*#__PURE__*/React.createElement(_Dropdown, {\n      overlay: /*#__PURE__*/React.createElement(_Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, !isStarded && /*#__PURE__*/React.createElement(_Menu.Item, {\n        onClick: () => onClickBegin(service),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ScissorOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, \" Commercer\")), isStarded && !isOver && /*#__PURE__*/React.createElement(_Menu.Item, {\n        onClick: () => onClickFollow(service),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ScissorOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \" Valider une \\xE9tape\")), /*#__PURE__*/React.createElement(_Menu.Item, {\n        onClick: () => onClickShow(service),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(EyeOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }, \"Voir\")), /*#__PURE__*/React.createElement(_Menu.Item, {\n        onClick: () => onClickEdit(service),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, \"Modifier\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SmallDashOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Radio.Group, {\n    buttonStyle: \"solid\",\n    value: type,\n    size: \"small\",\n    onChange: ({\n      target: {\n        value\n      }\n    }) => setType(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Radio.Button, {\n    value: \"tissu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Tissu\"), /*#__PURE__*/React.createElement(_Radio.Button, {\n    value: \"modele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Modele\")), /*#__PURE__*/React.createElement(_Card.Meta, {\n    title: \"Progression\",\n    description: /*#__PURE__*/React.createElement(_Progress, {\n      percent: progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n};\nexport const ServiceDetail = ({\n  employes,\n  comment,\n  dateBegin,\n  dateFinish\n}) => {\n  return /*#__PURE__*/React.createElement(_Card, {\n    title: \"Service\",\n    bordered: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Descriptions, {\n    bordered: true,\n    size: \"small\",\n    column: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, employes.nodes.map(({\n    fullName\n  }, key) => /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"Reponsable\",\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, fullName)), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"Date de d\\xE9marrage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, dateBegin), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"Date de livraison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, dateFinish), comment && /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"Commentaires\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, dateFinish)));\n};\nexport const ServiceResumeList = ({\n  data\n}) => {\n  return /*#__PURE__*/React.createElement(_List, {\n    size: \"small\",\n    itemLayout: \"horizontal\",\n    dataSource: data,\n    style: {\n      margin: 20,\n      overflow: \"auto\",\n      height: 500\n    },\n    bordered: false,\n    renderItem: ({\n      dateBegin,\n      dateFinish,\n      imageFile: [{\n        url\n      }],\n      progress\n    }) => /*#__PURE__*/React.createElement(_List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(_Avatar, {\n        size: 64,\n        shape: \"square\",\n        src: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(_List.Item.Meta, {\n      title: \"D\\xE9but\",\n      description: moment(dateBegin).format(\"DD MMM\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(_List.Item.Meta, {\n      title: \"Fin\",\n      description: moment(dateFinish).format(\"DD MMM\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(_List.Item.Meta, {\n      title: \"Progression\",\n      description: /*#__PURE__*/React.createElement(_Progress, {\n        percent: progress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 26\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/Display.tsx"],"names":["React","useState","ScissorOutlined","EyeOutlined","SmallDashOutlined","EditOutlined","moment","ServiceResume","onClickBegin","onClickShow","onClickEdit","onClickFollow","service","id","code","modele","imageFile","progress","isStarded","isOver","noExtra","type","setType","length","map","url","name","key","target","value","ServiceDetail","employes","comment","dateBegin","dateFinish","nodes","fullName","ServiceResumeList","data","margin","overflow","height","format"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  Tag,\n  Menu,\n  Dropdown,\n  Descriptions,\n  List,\n  Avatar,\n  Progress,\n  Carousel,\n  Radio,\n} from \"antd\";\nimport {\n  ScissorOutlined,\n  EyeOutlined,\n  SmallDashOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\n\nimport moment from \"moment\";\n\nexport const ServiceResume = ({\n  onClickBegin,\n  onClickShow,\n  onClickEdit,\n  onClickFollow,\n  ...service\n}) => {\n  const {\n    id,\n    code,\n    modele,\n    imageFile,\n    progress,\n    isStarded,\n    isOver,\n    noExtra,\n  } = service;\n  const [type, setType] = useState(\"modele\");\n  return (\n    <Card\n      size=\"small\"\n      key={id}\n      title={<Tag color=\"#1DA57A\">{`Code service: ${code}`}</Tag>}\n      cover={\n        <Carousel autoplay>\n          {type === \"modele\" && modele.imageFile.length > 0\n            ? modele.imageFile.map(({ url, name }, key) => (\n                <img key={key} alt={name} height={300} src={url} />\n              ))\n            : imageFile.length > 0 &&\n              imageFile.map(({ url, name }, key) => (\n                <img key={key} alt={name} height={300} src={url} />\n              ))}\n        </Carousel>\n      }\n      extra={\n        !noExtra && (\n          <Dropdown\n            overlay={\n              <Menu>\n                {!isStarded && (\n                  <Menu.Item onClick={() => onClickBegin(service)}>\n                    <ScissorOutlined />\n                    <span> Commercer</span>\n                  </Menu.Item>\n                )}\n                {isStarded && !isOver && (\n                  <Menu.Item onClick={() => onClickFollow(service)}>\n                    <ScissorOutlined />\n                    <span> Valider une étape</span>\n                  </Menu.Item>\n                )}\n                <Menu.Item onClick={() => onClickShow(service)}>\n                  <EyeOutlined />\n                  <span>Voir</span>\n                </Menu.Item>\n                <Menu.Item onClick={() => onClickEdit(service)}>\n                  <EditOutlined />\n                  <span>Modifier</span>\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <SmallDashOutlined />\n          </Dropdown>\n        )\n      }\n    >\n      <Radio.Group\n        buttonStyle=\"solid\"\n        value={type}\n        size=\"small\"\n        onChange={({ target: { value } }) => setType(value)}\n      >\n        <Radio.Button value=\"tissu\">Tissu</Radio.Button>\n        <Radio.Button value=\"modele\">Modele</Radio.Button>\n      </Radio.Group>\n      <Card.Meta\n        title=\"Progression\"\n        description={<Progress percent={progress} />}\n      />\n    </Card>\n  );\n};\n\nexport const ServiceDetail = ({ employes, comment, dateBegin, dateFinish }) => {\n  return (\n    <Card title=\"Service\" bordered={false}>\n      <Descriptions bordered size=\"small\" column={1}>\n        {employes.nodes.map(({ fullName }, key) => (\n          <Descriptions.Item label=\"Reponsable\" key={key}>\n            {fullName}\n          </Descriptions.Item>\n        ))}\n        <Descriptions.Item label=\"Date de démarrage\">\n          {dateBegin}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Date de livraison\">\n          {dateFinish}\n        </Descriptions.Item>\n        {comment && (\n          <Descriptions.Item label=\"Commentaires\">\n            {dateFinish}\n          </Descriptions.Item>\n        )}\n      </Descriptions>\n    </Card>\n  );\n};\n\nexport const ServiceResumeList = ({ data }) => {\n  return (\n    <List\n      size=\"small\"\n      itemLayout=\"horizontal\"\n      dataSource={data}\n      style={{ margin: 20, overflow: \"auto\", height: 500 }}\n      bordered={false}\n      renderItem={({\n        dateBegin,\n        dateFinish,\n        imageFile: [{ url }],\n        progress,\n      }) => (\n        <List.Item>\n          <List.Item.Meta\n            avatar={<Avatar size={64} shape=\"square\" src={url} />}\n          />\n          <List.Item.Meta\n            title=\"Début\"\n            description={moment(dateBegin).format(\"DD MMM\")}\n          />\n          <List.Item.Meta\n            title=\"Fin\"\n            description={moment(dateFinish).format(\"DD MMM\")}\n          />\n          <List.Item.Meta\n            title=\"Progression\"\n            description={<Progress percent={progress} />}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}