{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Notification/Notification.tsx\";\nimport React, { useContext } from \"react\";\nimport { Theme } from \"../../Shared/ManagerLayout\";\nimport { NOTIFICATIONS } from \"../../../Gql/Query\";\nimport { UserContext } from \"../../Context\";\nimport { useQuery } from \"@apollo/react-hooks\";\nexport const Notification = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    data\n  } = useQuery(NOTIFICATIONS, {\n    variables: {\n      workshopId: user.workshop.id,\n      onlyTotalCount: false\n    }\n  });\n\n  if (data) {\n    console.log(data);\n  }\n\n  return /*#__PURE__*/React.createElement(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_List, {\n    grid: {\n      gutter: 16,\n      column: 4\n    },\n    dataSource: data === null || data === void 0 ? void 0 : data.notifications.nodes,\n    renderItem: ({\n      typeNotification,\n      message\n    }) => /*#__PURE__*/React.createElement(_List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      title: typeNotification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, message)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Notification/Notification.tsx"],"names":["React","useContext","Theme","NOTIFICATIONS","UserContext","useQuery","Notification","user","data","variables","workshopId","workshop","id","onlyTotalCount","console","log","gutter","column","notifications","nodes","typeNotification","message"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,QAAsB,4BAAtB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAWN,UAAU,CAACG,WAAD,CAA3B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWH,QAAQ,CAACF,aAAD,EAAgB;AACvCM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAEH,IAAI,CAACI,QAAL,CAAcC,EAA5B;AAAgCC,MAAAA,cAAc,EAAE;AAAhD;AAD4B,GAAhB,CAAzB;;AAGA,MAAIL,IAAJ,EAAU;AACRM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD;;AACD,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAE;AAAEQ,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADR;AAEE,IAAA,UAAU,EAAET,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU,aAAN,CAAoBC,KAFlC;AAGE,IAAA,UAAU,EAAE,CAAC;AAAEC,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,KAAD,kBACV,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,KAAK,EAAED,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCC,OAAhC,CADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAiBD,CAzBM","sourcesContent":["import React, { useContext } from \"react\";\nimport { Theme } from \"../../Shared/ManagerLayout\";\nimport { Row, Col, List, Card } from \"antd\";\nimport { NOTIFICATIONS } from \"../../../Gql/Query\";\nimport { UserContext } from \"../../Context\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nexport const Notification = () => {\n  const { user } = useContext(UserContext);\n  const { data } = useQuery(NOTIFICATIONS, {\n    variables: { workshopId: user.workshop.id, onlyTotalCount: false },\n  });\n  if (data) {\n    console.log(data);\n  }\n  return (\n    <Theme>\n      <Row justify=\"center\">\n        <Col xs={24}>\n          <List\n            grid={{ gutter: 16, column: 4 }}\n            dataSource={data?.notifications.nodes}\n            renderItem={({ typeNotification, message }) => (\n              <List.Item>\n                <Card title={typeNotification}>{message}</Card>\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </Theme>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}