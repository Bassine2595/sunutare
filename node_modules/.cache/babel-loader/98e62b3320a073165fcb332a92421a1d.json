{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Login/Login.tsx\";\nimport React, { useState } from \"react\";\nimport { UserLayout } from \"../Shared/UserLayout\";\nimport { LoginForm } from \"./Form\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN } from \"../../Gql/Mutation\";\nimport { Auth } from \"../../Service\";\nimport jwtDecode from \"jwt-decode\";\nimport { Activate } from \"./Activate\";\nexport const Login = () => {\n  const [login, {\n    loading\n  }] = useMutation(LOGIN);\n  const [mail, setMail] = useState();\n  const [token, setToken] = useState();\n\n  const onFinish = values => {\n    login({\n      variables: values\n    }).then(data => {\n      const {\n        login: {\n          jwtToken\n        }\n      } = data.data;\n\n      if (jwtToken) {\n        const {\n          is_active\n        } = jwtDecode(jwtToken);\n\n        if (is_active) {\n          Auth.login({\n            token: jwtToken,\n            cb: () => {\n              window.location.href = process.env.REACT_APP_ROOT;\n            }\n          });\n        } else {\n          setMail(values.mail);\n          setToken(jwtToken);\n        }\n      } else {\n        _message.info(\"E-mail ou Mot de passe incorrect !\");\n      }\n    }).catch(error => {\n      _message.error(\"Une erreur est surevenue !\");\n\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(UserLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    md: 16,\n    lg: 10,\n    xl: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, mail && token && /*#__PURE__*/React.createElement(Activate, {\n    mail: mail,\n    token: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(_Card, {\n    hoverable: true,\n    title: \"Connectez-vous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LoginForm, {\n    onFinish: onFinish,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Login/Login.tsx"],"names":["React","useState","UserLayout","LoginForm","useMutation","LOGIN","Auth","jwtDecode","Activate","Login","login","loading","mail","setMail","token","setToken","onFinish","values","variables","then","data","jwtToken","is_active","cb","window","location","href","process","env","REACT_APP_ROOT","info","catch","error","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,IAAuBP,WAAW,CAACC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;;AAEA,QAAMe,QAAQ,GAAIC,MAAD,IAAY;AAC3BP,IAAAA,KAAK,CAAC;AAAEQ,MAAAA,SAAS,EAAED;AAAb,KAAD,CAAL,CACGE,IADH,CACSC,IAAD,IAAU;AACd,YAAM;AACJV,QAAAA,KAAK,EAAE;AAAEW,UAAAA;AAAF;AADH,UAEFD,IAAI,CAACA,IAFT;;AAGA,UAAIC,QAAJ,EAAc;AACZ,cAAM;AAAEC,UAAAA;AAAF,YAAgBf,SAAS,CAACc,QAAD,CAA/B;;AACA,YAAIC,SAAJ,EAAe;AACbhB,UAAAA,IAAI,CAACI,KAAL,CAAW;AACTI,YAAAA,KAAK,EAAEO,QADE;AAETE,YAAAA,EAAE,EAAE,MAAM;AACRC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBC,OAAO,CAACC,GAAR,CAAYC,cAAnC;AACD;AAJQ,WAAX;AAMD,SAPD,MAOO;AACLhB,UAAAA,OAAO,CAACI,MAAM,CAACL,IAAR,CAAP;AACAG,UAAAA,QAAQ,CAACM,QAAD,CAAR;AACD;AACF,OAbD,MAaO;AACL,iBAAQS,IAAR,CAAa,oCAAb;AACD;AACF,KArBH,EAsBGC,KAtBH,CAsBUC,KAAD,IAAW;AAChB,eAAQA,KAAR,CAAc,4BAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAzBH;AA0BD,GA3BD;;AA6BA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,IAAI,IAAIE,KAAR,iBAAiB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAsB,IAAA,KAAK,EAAEE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,eAEE;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEE,QAArB;AAA+B,IAAA,OAAO,EAAEL,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF,CADF;AAYD,CA9CM","sourcesContent":["import React, { useState } from \"react\";\nimport { UserLayout } from \"../Shared/UserLayout\";\nimport { LoginForm } from \"./Form\";\nimport { Card, Col, Row, message } from \"antd\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN } from \"../../Gql/Mutation\";\nimport { Auth } from \"../../Service\";\nimport jwtDecode from \"jwt-decode\";\nimport { Activate } from \"./Activate\";\n\nexport const Login = () => {\n  const [login, { loading }] = useMutation(LOGIN);\n  const [mail, setMail] = useState();\n  const [token, setToken] = useState();\n\n  const onFinish = (values) => {\n    login({ variables: values })\n      .then((data) => {\n        const {\n          login: { jwtToken },\n        } = data.data;\n        if (jwtToken) {\n          const { is_active } = jwtDecode(jwtToken);\n          if (is_active) {\n            Auth.login({\n              token: jwtToken,\n              cb: () => {\n                window.location.href = process.env.REACT_APP_ROOT;\n              },\n            });\n          } else {\n            setMail(values.mail);\n            setToken(jwtToken);\n          }\n        } else {\n          message.info(\"E-mail ou Mot de passe incorrect !\");\n        }\n      })\n      .catch((error) => {\n        message.error(\"Une erreur est surevenue !\");\n        console.log(error);\n      });\n  };\n\n  return (\n    <UserLayout>\n      <Row justify=\"center\">\n        <Col xs={24} md={16} lg={10} xl={8}>\n          {mail && token && <Activate mail={mail} token={token} />}\n          <Card hoverable title=\"Connectez-vous\">\n            <LoginForm onFinish={onFinish} loading={loading} />\n          </Card>\n        </Col>\n      </Row>\n    </UserLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}