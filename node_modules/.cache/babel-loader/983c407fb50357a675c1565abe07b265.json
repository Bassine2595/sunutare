{"ast":null,"code":"import \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Form.tsx\";\nimport React, { useState } from \"react\";\nimport { FormItemGender, FormItemFullName, FormItemPhone, FormItemMail } from \"../../Shared/Input\";\nimport { ButtonSave, ButtonSend } from \"../../Shared/Button\";\nexport const AddForm = ({\n  loading,\n  onFinish\n}) => /*#__PURE__*/React.createElement(_Form, {\n  onFinish: onFinish,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(FormItemGender, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(FormItemFullName, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(FormItemPhone, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(FormItemMail, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(ButtonSave, {\n  type: \"primary\",\n  htmlType: \"submit\",\n  loading: loading,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}));\nconst {\n  TextArea\n} = _Input;\nexport const ContactForm = ({\n  onFinish,\n  initialValues,\n  messages\n}) => {\n  const [current, setCurrent] = useState(null);\n\n  const onChange = ({\n    target: {\n      value\n    }\n  }) => {\n    setCurrent({\n      messageId: null,\n      message: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(_Form, {\n    onFinish: onFinish,\n    initialValues: initialValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormItemFullName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    rows: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, messages && messages.map(({\n    id,\n    message\n  }) => /*#__PURE__*/React.createElement(_Tag, {\n    key: id,\n    color: \"#1DA57A\",\n    style: {\n      cursor: \"pointer\",\n      width: \"100%\",\n      borderRadius: 5\n    },\n    onClick: () => setCurrent({\n      messageId: id,\n      message\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, message))), /*#__PURE__*/React.createElement(_Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ButtonSend, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Form.tsx"],"names":["React","useState","FormItemGender","FormItemFullName","FormItemPhone","FormItemMail","ButtonSave","ButtonSend","AddForm","loading","onFinish","TextArea","ContactForm","initialValues","messages","current","setCurrent","onChange","target","value","messageId","message","map","id","cursor","width","borderRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,YAJF,QAKO,oBALP;AAMA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,qBAAvC;AAGA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,kBACrB;AAAM,EAAA,QAAQ,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,eAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,eAKE,oBAAC,UAAD;AAAY,EAAA,IAAI,EAAC,SAAjB;AAA2B,EAAA,QAAQ,EAAC,QAApC;AAA6C,EAAA,OAAO,EAAED,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADK;AAUP,MAAM;AAAEE,EAAAA;AAAF,UAAN;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEF,EAAAA,QAAF;AAAYG,EAAAA,aAAZ;AAA2BC,EAAAA;AAA3B,CAAD,KAA2C;AACpE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMgB,QAAQ,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV,GAAD,KAA2B;AAC1CH,IAAAA,UAAU,CAAC;AAAEI,MAAAA,SAAS,EAAE,IAAb;AAAmBC,MAAAA,OAAO,EAAEF;AAA5B,KAAD,CAAV;AACD,GAFD;;AAGA,sBACE;AAAM,IAAA,QAAQ,EAAET,QAAhB;AAA0B,IAAA,aAAa,EAAEG,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,IACPA,QAAQ,CAACQ,GAAT,CAAa,CAAC;AAAEC,IAAAA,EAAF;AAAMF,IAAAA;AAAN,GAAD,kBACX;AACE,IAAA,GAAG,EAAEE,EADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,KAAK,EAAE,MAA5B;AAAoCC,MAAAA,YAAY,EAAE;AAAlD,KAHT;AAIE,IAAA,OAAO,EAAE,MAAMV,UAAU,CAAC;AAAEI,MAAAA,SAAS,EAAEG,EAAb;AAAiBF,MAAAA;AAAjB,KAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGA,OANH,CADF,CAFJ,CAJF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eAkBE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,QAAQ,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD,CA3BM","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  FormItemGender,\n  FormItemFullName,\n  FormItemPhone,\n  FormItemMail,\n} from \"../../Shared/Input\";\nimport { ButtonSave, ButtonSend } from \"../../Shared/Button\";\nimport { Form, Input, Divider, Space, Tag } from \"antd\";\n\nexport const AddForm = ({ loading, onFinish }) => (\n  <Form onFinish={onFinish}>\n    <FormItemGender />\n    <FormItemFullName />\n    <FormItemPhone />\n    <FormItemMail />\n    <ButtonSave type=\"primary\" htmlType=\"submit\" loading={loading} />\n  </Form>\n);\n\nconst { TextArea } = Input;\n\nexport const ContactForm = ({ onFinish, initialValues, messages }) => {\n  const [current, setCurrent] = useState(null);\n  const onChange = ({ target: { value } }) => {\n    setCurrent({ messageId: null, message: value });\n  };\n  return (\n    <Form onFinish={onFinish} initialValues={initialValues}>\n      <FormItemFullName />\n      <TextArea rows={1} />\n      <Divider />\n      <Space direction=\"vertical\">\n        {messages &&\n          messages.map(({ id, message }) => (\n            <Tag\n              key={id}\n              color=\"#1DA57A\"\n              style={{ cursor: \"pointer\", width: \"100%\", borderRadius: 5 }}\n              onClick={() => setCurrent({ messageId: id, message })}\n            >\n              {message}\n            </Tag>\n          ))}\n      </Space>\n      <Divider />\n      <ButtonSend type=\"primary\" htmlType=\"submit\" />\n    </Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}