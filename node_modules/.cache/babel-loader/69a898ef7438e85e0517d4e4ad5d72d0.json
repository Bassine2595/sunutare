{"ast":null,"code":"import _ from \"lodash\";\nexport const MeasureRule = [{\n  type: \"float\"\n}];\nexport const RequiredRule = [{\n  required: true\n}];\nexport const PriceRule = () => ({\n  validator(rule, value) {\n    const price = _.toNumber(value);\n\n    if (_.isNaN(price) || price < 0) {\n      return Promise.reject(\"Prix non valide!\");\n    }\n\n    return Promise.resolve();\n  }\n\n});\nexport const MailRule = _.concat(RequiredRule, [{\n  type: \"email\"\n}]);\nexport const PasswordRule = _.concat(RequiredRule, [{\n  min: 2\n}]);\nexport const ConfirmPasswordRule = _.concat(PasswordRule, [({\n  getFieldValue\n}) => ({\n  validator(rule, value) {\n    if (!value || getFieldValue(\"password\") === value) {\n      return Promise.resolve();\n    }\n\n    return Promise.reject(\"Les deux mots de passe doivent correspondre !\");\n  }\n\n})]);\nexport const PhoneRule = _.concat(RequiredRule, [{\n  min: 8\n}]);","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Rules.ts"],"names":["_","MeasureRule","type","RequiredRule","required","PriceRule","validator","rule","value","price","toNumber","isNaN","Promise","reject","resolve","MailRule","concat","PasswordRule","min","ConfirmPasswordRule","getFieldValue","PhoneRule"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,WAAiB,GAAG,CAC/B;AACEC,EAAAA,IAAI,EAAE;AADR,CAD+B,CAA1B;AAMP,OAAO,MAAMC,YAAY,GAAG,CAC1B;AACEC,EAAAA,QAAQ,EAAE;AADZ,CAD0B,CAArB;AAMP,OAAO,MAAMC,SAAS,GAAG,OAAO;AAC9BC,EAAAA,SAAS,CAACC,IAAD,EAAOC,KAAP,EAAc;AACrB,UAAMC,KAAK,GAAGT,CAAC,CAACU,QAAF,CAAWF,KAAX,CAAd;;AACA,QAAIR,CAAC,CAACW,KAAF,CAAQF,KAAR,KAAkBA,KAAK,GAAG,CAA9B,EAAiC;AAC/B,aAAOG,OAAO,CAACC,MAAR,CAAe,kBAAf,CAAP;AACD;;AACD,WAAOD,OAAO,CAACE,OAAR,EAAP;AACD;;AAP6B,CAAP,CAAlB;AAUP,OAAO,MAAMC,QAAQ,GAAGf,CAAC,CAACgB,MAAF,CAAab,YAAb,EAA2B,CACjD;AACED,EAAAA,IAAI,EAAE;AADR,CADiD,CAA3B,CAAjB;AAMP,OAAO,MAAMe,YAAY,GAAGjB,CAAC,CAACgB,MAAF,CAAab,YAAb,EAA2B,CACrD;AACEe,EAAAA,GAAG,EAAE;AADP,CADqD,CAA3B,CAArB;AAMP,OAAO,MAAMC,mBAAmB,GAAGnB,CAAC,CAACgB,MAAF,CAASC,YAAT,EAAuB,CACxD,CAAC;AAAEG,EAAAA;AAAF,CAAD,MAAwB;AACtBd,EAAAA,SAAS,CAACC,IAAD,EAAOC,KAAP,EAAc;AACrB,QAAI,CAACA,KAAD,IAAUY,aAAa,CAAC,UAAD,CAAb,KAA8BZ,KAA5C,EAAmD;AACjD,aAAOI,OAAO,CAACE,OAAR,EAAP;AACD;;AACD,WAAOF,OAAO,CAACC,MAAR,CAAe,+CAAf,CAAP;AACD;;AANqB,CAAxB,CADwD,CAAvB,CAA5B;AAWP,OAAO,MAAMQ,SAAS,GAAGrB,CAAC,CAACgB,MAAF,CAAab,YAAb,EAA2B,CAClD;AACEe,EAAAA,GAAG,EAAE;AADP,CADkD,CAA3B,CAAlB","sourcesContent":["import _ from \"lodash\";\n\nexport const MeasureRule: [{}] = [\n  {\n    type: \"float\",\n  },\n];\n\nexport const RequiredRule = [\n  {\n    required: true,\n  },\n];\n\nexport const PriceRule = () => ({\n  validator(rule, value) {\n    const price = _.toNumber(value);\n    if (_.isNaN(price) || price < 0) {\n      return Promise.reject(\"Prix non valide!\");\n    }\n    return Promise.resolve();\n  },\n});\n\nexport const MailRule = _.concat<{}>(RequiredRule, [\n  {\n    type: \"email\",\n  },\n]);\n\nexport const PasswordRule = _.concat<{}>(RequiredRule, [\n  {\n    min: 2,\n  },\n]);\n\nexport const ConfirmPasswordRule = _.concat(PasswordRule, [\n  ({ getFieldValue }) => ({\n    validator(rule, value) {\n      if (!value || getFieldValue(\"password\") === value) {\n        return Promise.resolve();\n      }\n      return Promise.reject(\"Les deux mots de passe doivent correspondre !\");\n    },\n  }),\n]);\n\nexport const PhoneRule = _.concat<{}>(RequiredRule, [\n  {\n    min: 8,\n  },\n]);\n"]},"metadata":{},"sourceType":"module"}