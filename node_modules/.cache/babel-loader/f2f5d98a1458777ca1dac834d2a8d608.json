{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Contact.tsx\";\nimport React, { useContext } from \"react\";\nimport { ContactForm } from \"./Form\";\nimport { MESSAGEBYSUBJECT } from \"../../../Gql/Query\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../Context\";\nexport const Contact = ({\n  customer,\n  visible,\n  onCancel,\n  onSuccess,\n  onError\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(MESSAGEBYSUBJECT, {\n    variables: {\n      subject: \"Info\"\n    }\n  });\n  const {\n    user\n  } = useContext(UserContext);\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/React.createElement(_Modal, {\n    visible: visible,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ContactForm, {\n    onFinish: onFinish,\n    initialValues: customer,\n    messages: data === null || data === void 0 ? void 0 : data.messages.nodes.map(({\n      message\n    }) => ({\n      id: id,\n      message: message.replace(\"{gender}\", customer.gender).replace(\"{fullName}\", customer.fullName).replace(\"{workshopName}\", user.workshop.name)\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Contact.tsx"],"names":["React","useContext","ContactForm","MESSAGEBYSUBJECT","useQuery","UserContext","Contact","customer","visible","onCancel","onSuccess","onError","data","loading","variables","subject","user","onFinish","values","console","log","messages","nodes","map","message","id","replace","gender","fullName","workshop","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AACtBC,EAAAA,QADsB;AAEtBC,EAAAA,OAFsB;AAGtBC,EAAAA,QAHsB;AAItBC,EAAAA,SAJsB;AAKtBC,EAAAA;AALsB,CAAD,KAMjB;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBT,QAAQ,CAACD,gBAAD,EAAmB;AACnDW,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AADwC,GAAnB,CAAlC;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAWf,UAAU,CAACI,WAAD,CAA3B;;AACA,QAAMY,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAFD;;AAGA,sBACE;AAAO,IAAA,OAAO,EAAEV,OAAhB;AAAyB,IAAA,QAAQ,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEQ,QADZ;AAEE,IAAA,aAAa,EAAEV,QAFjB;AAGE,IAAA,QAAQ,EAAEK,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAES,QAAN,CAAeC,KAAf,CAAqBC,GAArB,CAAyB,CAAC;AAAEC,MAAAA;AAAF,KAAD,MAAkB;AACnDC,MAAAA,EAAE,EAAEA,EAD+C;AAEnDD,MAAAA,OAAO,EAAEA,OAAO,CACbE,OADM,CACE,UADF,EACcnB,QAAQ,CAACoB,MADvB,EAEND,OAFM,CAEE,YAFF,EAEgBnB,QAAQ,CAACqB,QAFzB,EAGNF,OAHM,CAGE,gBAHF,EAGoBV,IAAI,CAACa,QAAL,CAAcC,IAHlC;AAF0C,KAAlB,CAAzB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD,CA9BM","sourcesContent":["import { Modal } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { ContactForm } from \"./Form\";\nimport { MESSAGEBYSUBJECT } from \"../../../Gql/Query\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../Context\";\n\nexport const Contact = ({\n  customer,\n  visible,\n  onCancel,\n  onSuccess,\n  onError,\n}) => {\n  const { data, loading } = useQuery(MESSAGEBYSUBJECT, {\n    variables: { subject: \"Info\" },\n  });\n\n  const { user } = useContext(UserContext);\n  const onFinish = (values) => {\n    console.log(values);\n  };\n  return (\n    <Modal visible={visible} onCancel={onCancel}>\n      <ContactForm\n        onFinish={onFinish}\n        initialValues={customer}\n        messages={data?.messages.nodes.map(({ message }) => ({\n          id: id,\n          message: message\n            .replace(\"{gender}\", customer.gender)\n            .replace(\"{fullName}\", customer.fullName)\n            .replace(\"{workshopName}\", user.workshop.name),\n        }))}\n      />\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}