{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Contact.tsx\";\nimport React, { useContext } from \"react\";\nimport { ContactForm } from \"./Form\";\nimport { MESSAGEBYSUBJECT } from \"../../../Gql/Query\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../Context\";\nexport const Contact = ({\n  customer,\n  visible,\n  onCancel,\n  onSuccess,\n  onError\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(MESSAGEBYSUBJECT, {\n    variables: {\n      subject: \"Info\"\n    }\n  });\n\n  if (data) {\n    console.log(data);\n  }\n\n  const {\n    user\n  } = useContext(UserContext);\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/React.createElement(_Modal, {\n    visible: visible,\n    onCancel: onCancel,\n    bodyStyle: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ContactForm, {\n    onFinish: onFinish,\n    initialValues: customer,\n    messages: data === null || data === void 0 ? void 0 : data.messages.nodes.map(({\n      id,\n      message\n    }) => ({\n      id: id,\n      message: message.replace(\"{gender}\", customer.gender).replace(\"{fullName}\", customer.fullName).replace(\"{workshopName}\", user.workshop.name)\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Contact.tsx"],"names":["React","useContext","ContactForm","MESSAGEBYSUBJECT","useQuery","UserContext","Contact","customer","visible","onCancel","onSuccess","onError","data","loading","variables","subject","console","log","user","onFinish","values","margin","messages","nodes","map","id","message","replace","gender","fullName","workshop","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AACtBC,EAAAA,QADsB;AAEtBC,EAAAA,OAFsB;AAGtBC,EAAAA,QAHsB;AAItBC,EAAAA,SAJsB;AAKtBC,EAAAA;AALsB,CAAD,KAMjB;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBT,QAAQ,CAACD,gBAAD,EAAmB;AACnDW,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AADwC,GAAnB,CAAlC;;AAIA,MAAIH,IAAJ,EAAU;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD;;AAED,QAAM;AAAEM,IAAAA;AAAF,MAAWjB,UAAU,CAACI,WAAD,CAA3B;;AACA,QAAMc,QAAQ,GAAIC,MAAD,IAAY;AAC3BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACD,GAFD;;AAGA,sBACE;AAAO,IAAA,OAAO,EAAEZ,OAAhB;AAAyB,IAAA,QAAQ,EAAEC,QAAnC;AAA6C,IAAA,SAAS,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEF,QADZ;AAEE,IAAA,aAAa,EAAEZ,QAFjB;AAGE,IAAA,QAAQ,EAAEK,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU,QAAN,CAAeC,KAAf,CAAqBC,GAArB,CAAyB,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAD,MAAsB;AACvDD,MAAAA,EAAE,EAAEA,EADmD;AAEvDC,MAAAA,OAAO,EAAEA,OAAO,CACbC,OADM,CACE,UADF,EACcpB,QAAQ,CAACqB,MADvB,EAEND,OAFM,CAEE,YAFF,EAEgBpB,QAAQ,CAACsB,QAFzB,EAGNF,OAHM,CAGE,gBAHF,EAGoBT,IAAI,CAACY,QAAL,CAAcC,IAHlC;AAF8C,KAAtB,CAAzB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD,CAlCM","sourcesContent":["import { Modal } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { ContactForm } from \"./Form\";\nimport { MESSAGEBYSUBJECT } from \"../../../Gql/Query\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../Context\";\n\nexport const Contact = ({\n  customer,\n  visible,\n  onCancel,\n  onSuccess,\n  onError,\n}) => {\n  const { data, loading } = useQuery(MESSAGEBYSUBJECT, {\n    variables: { subject: \"Info\" },\n  });\n\n  if (data) {\n    console.log(data);\n  }\n\n  const { user } = useContext(UserContext);\n  const onFinish = (values) => {\n    console.log(values);\n  };\n  return (\n    <Modal visible={visible} onCancel={onCancel} bodyStyle={{ margin: 20 }}>\n      <ContactForm\n        onFinish={onFinish}\n        initialValues={customer}\n        messages={data?.messages.nodes.map(({ id, message }) => ({\n          id: id,\n          message: message\n            .replace(\"{gender}\", customer.gender)\n            .replace(\"{fullName}\", customer.fullName)\n            .replace(\"{workshopName}\", user.workshop.name),\n        }))}\n      />\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}