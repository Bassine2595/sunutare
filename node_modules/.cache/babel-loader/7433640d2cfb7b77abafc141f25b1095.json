{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Contact.tsx\";\nimport React, { useContext } from \"react\";\nimport { ContactForm } from \"./Form\";\nimport { MESSAGEBYSUBJECT } from \"../../../Gql/Query\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../Context\";\nimport { ContactClienBytMail } from \"../../../Service\";\nimport { ButtonSend, ButtonCancel } from \"../../Shared/Button\";\nimport { useForm } from \"antd/lib/form/util\";\nexport const Contact = ({\n  customer,\n  visible,\n  onCancel,\n  onSuccess,\n  onError\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(MESSAGEBYSUBJECT, {\n    variables: {\n      subject: \"Info\"\n    }\n  });\n  const [form] = useForm();\n  const {\n    user\n  } = useContext(UserContext);\n\n  const onFinish = values => {\n    ContactClienBytMail({\n      mail: customer.mail,\n      message: \"\",\n      subject: \"\"\n    });\n    console.log(values);\n  };\n\n  return /*#__PURE__*/React.createElement(_Modal, {\n    closable: false,\n    visible: visible,\n    bodyStyle: {\n      margin: 20\n    },\n    width: 600,\n    footer: [/*#__PURE__*/React.createElement(ButtonSend, {\n      key: \"send\",\n      onClick: onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ButtonCancel, {\n      key: \"cancel\",\n      onClick: onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    })],\n    title: \"Contacter vos clients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ContactForm, {\n    onFinish: onFinish,\n    initialValues: customer,\n    messages: data === null || data === void 0 ? void 0 : data.messages.nodes.map(({\n      id,\n      message\n    }) => ({\n      id: id,\n      message: message.replace(\"{fullName}\", customer === null || customer === void 0 ? void 0 : customer.fullName).replace(\"{workshopName}\", user.workshop.name)\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Contact.tsx"],"names":["React","useContext","ContactForm","MESSAGEBYSUBJECT","useQuery","UserContext","ContactClienBytMail","ButtonSend","ButtonCancel","useForm","Contact","customer","visible","onCancel","onSuccess","onError","data","loading","variables","subject","form","user","onFinish","values","mail","message","console","log","margin","messages","nodes","map","id","replace","fullName","workshop","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qBAAzC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AACtBC,EAAAA,QADsB;AAEtBC,EAAAA,OAFsB;AAGtBC,EAAAA,QAHsB;AAItBC,EAAAA,SAJsB;AAKtBC,EAAAA;AALsB,CAAD,KAMjB;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBb,QAAQ,CAACD,gBAAD,EAAmB;AACnDe,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AADwC,GAAnB,CAAlC;AAGA,QAAM,CAACC,IAAD,IAASX,OAAO,EAAtB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWpB,UAAU,CAACI,WAAD,CAA3B;;AACA,QAAMiB,QAAQ,GAAIC,MAAD,IAAY;AAC3BjB,IAAAA,mBAAmB,CAAC;AAClBkB,MAAAA,IAAI,EAAEb,QAAQ,CAACa,IADG;AAElBC,MAAAA,OAAO,EAAE,EAFS;AAGlBN,MAAAA,OAAO,EAAE;AAHS,KAAD,CAAnB;AAMAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,GARD;;AAUA,sBACE;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,OAAO,EAAEX,OAFX;AAGE,IAAA,SAAS,EAAE;AAAEgB,MAAAA,MAAM,EAAE;AAAV,KAHb;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,MAAM,EAAE,cACN,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAEN,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,eAEN,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAET,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFM,CALV;AASE,IAAA,KAAK,EAAC,uBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAES,QADZ;AAEE,IAAA,aAAa,EAAEX,QAFjB;AAGE,IAAA,QAAQ,EAAEK,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEa,QAAN,CAAeC,KAAf,CAAqBC,GAArB,CAAyB,CAAC;AAAEC,MAAAA,EAAF;AAAMP,MAAAA;AAAN,KAAD,MAAsB;AACvDO,MAAAA,EAAE,EAAEA,EADmD;AAEvDP,MAAAA,OAAO,EAAEA,OAAO,CAEbQ,OAFM,CAEE,YAFF,EAEgBtB,QAFhB,aAEgBA,QAFhB,uBAEgBA,QAAQ,CAAEuB,QAF1B,EAGND,OAHM,CAGE,gBAHF,EAGoBZ,IAAI,CAACc,QAAL,CAAcC,IAHlC;AAF8C,KAAtB,CAAzB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAyBD,CA/CM","sourcesContent":["import { Modal, message } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { ContactForm } from \"./Form\";\nimport { MESSAGEBYSUBJECT } from \"../../../Gql/Query\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../Context\";\nimport { ContactClienBytMail } from \"../../../Service\";\nimport { ButtonSend, ButtonCancel } from \"../../Shared/Button\";\nimport { useForm } from \"antd/lib/form/util\";\n\nexport const Contact = ({\n  customer,\n  visible,\n  onCancel,\n  onSuccess,\n  onError,\n}) => {\n  const { data, loading } = useQuery(MESSAGEBYSUBJECT, {\n    variables: { subject: \"Info\" },\n  });\n  const [form] = useForm();\n  const { user } = useContext(UserContext);\n  const onFinish = (values) => {\n    ContactClienBytMail({\n      mail: customer.mail,\n      message: \"\",\n      subject: \"\",\n    });\n\n    console.log(values);\n  };\n\n  return (\n    <Modal\n      closable={false}\n      visible={visible}\n      bodyStyle={{ margin: 20 }}\n      width={600}\n      footer={[\n        <ButtonSend key=\"send\" onClick={onFinish} />,\n        <ButtonCancel key=\"cancel\" onClick={onCancel} />,\n      ]}\n      title=\"Contacter vos clients\"\n    >\n      <ContactForm\n        onFinish={onFinish}\n        initialValues={customer}\n        messages={data?.messages.nodes.map(({ id, message }) => ({\n          id: id,\n          message: message\n\n            .replace(\"{fullName}\", customer?.fullName)\n            .replace(\"{workshopName}\", user.workshop.name),\n        }))}\n      />\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}