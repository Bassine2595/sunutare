{"ast":null,"code":"import \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/Add.tsx\";\nimport React, { useState } from \"react\";\nimport { Theme } from \"../../Shared/ManagerLayout\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADDSERVICE } from \"../../../Gql/Mutation\";\nimport { ServiceForm } from \"./Form\";\nimport { ChoiceModele } from \"./ChoiceModele\";\nimport { Measure } from \"./Measure\";\nimport { ArrowLeftOutlined, UserAddOutlined, SelectOutlined } from \"@ant-design/icons\";\nimport { Step } from \"./Step\";\nimport { useStep } from \"../../../hooks/UseStep\";\nimport { useModal } from \"../../../hooks/useModal\";\nimport { Add as AddCustomer } from \"../Customer/Add\";\nimport styles from \"./Service.module.less\";\nimport { Select as SelectCustomer } from \"../Customer/Select\";\nimport { useHistory } from \"react-router-dom\";\nexport const Add = () => {\n  const [addService, {\n    loading\n  }] = useMutation(ADDSERVICE);\n  const [selectModal, selectModalToggle] = useModal();\n  const [addModal, addModalToggle] = useModal();\n  const [customer, setCustomer] = useState(null);\n  const [modele, setModele] = useState(null);\n  const [measure, setMeasure] = useState(null);\n  const {\n    current,\n    next,\n    prev\n  } = useStep(0, 3);\n  const history = useHistory();\n\n  const onFinishService = values => {\n    const {\n      id,\n      fullName,\n      __typename,\n      ...rest\n    } = customer;\n    addService({\n      variables: {\n        input: {\n          customerId: id,\n          ...rest,\n          modeleId: modele.id,\n          ...measure,\n          ...values\n        }\n      }\n    }).then(({\n      data: {\n        addService\n      }\n    }) => {\n      _notification.success({\n        message: `Serivce ${addService.code} créé avec succès !`,\n        duration: 20\n      });\n\n      history.push(\"/service\");\n    }).catch(() => {\n      _notification.error({\n        message: \"Erreur !\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    title: current === 0 ? \"Prendre un service \" : /*#__PURE__*/React.createElement(_Button, {\n      onClick: prev,\n      type: \"link\",\n      icon: /*#__PURE__*/React.createElement(ArrowLeftOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \"Retour\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    current: current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCustomer, {\n    visible: addModal,\n    onFinish: customer => {\n      setCustomer(customer);\n      addModalToggle();\n      next();\n    },\n    onCancel: addModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SelectCustomer, {\n    visible: selectModal,\n    onCancel: selectModalToggle,\n    onSelected: customer => {\n      setCustomer(customer);\n      selectModalToggle();\n      next();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), current === 0 && /*#__PURE__*/React.createElement(_Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    onClick: selectModalToggle,\n    type: \"primary\",\n    icon: /*#__PURE__*/React.createElement(SelectOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    onClick: addModalToggle,\n    icon: /*#__PURE__*/React.createElement(UserAddOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 58\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  })), current === 1 && /*#__PURE__*/React.createElement(ChoiceModele, {\n    onChoice: modele => {\n      setModele(modele);\n      next();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), current === 2 && /*#__PURE__*/React.createElement(Measure, {\n    onFinish: measure => {\n      setMeasure(measure);\n      next();\n    },\n    customer: customer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), current === 3 && /*#__PURE__*/React.createElement(ServiceForm, {\n    onFinish: onFinishService,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }))))));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/Add.tsx"],"names":["React","useState","Theme","useMutation","ADDSERVICE","ServiceForm","ChoiceModele","Measure","ArrowLeftOutlined","UserAddOutlined","SelectOutlined","Step","useStep","useModal","Add","AddCustomer","styles","Select","SelectCustomer","useHistory","addService","loading","selectModal","selectModalToggle","addModal","addModalToggle","customer","setCustomer","modele","setModele","measure","setMeasure","current","next","prev","history","onFinishService","values","id","fullName","__typename","rest","variables","input","customerId","modeleId","then","data","success","message","code","duration","push","catch","error","container"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Theme } from \"../../Shared/ManagerLayout\";\nimport { Row, Col, Card, Button, Space, notification } from \"antd\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADDSERVICE } from \"../../../Gql/Mutation\";\nimport { ServiceForm } from \"./Form\";\nimport { ChoiceModele } from \"./ChoiceModele\";\nimport { Measure } from \"./Measure\";\nimport {\n  ArrowLeftOutlined,\n  UserAddOutlined,\n  SelectOutlined,\n} from \"@ant-design/icons\";\nimport { Step } from \"./Step\";\nimport { useStep } from \"../../../hooks/UseStep\";\nimport { useModal } from \"../../../hooks/useModal\";\nimport { Add as AddCustomer } from \"../Customer/Add\";\nimport styles from \"./Service.module.less\";\nimport { Select as SelectCustomer } from \"../Customer/Select\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Add = () => {\n  const [addService, { loading }] = useMutation(ADDSERVICE);\n  const [selectModal, selectModalToggle] = useModal();\n  const [addModal, addModalToggle] = useModal();\n  const [customer, setCustomer] = useState(null);\n  const [modele, setModele] = useState(null);\n  const [measure, setMeasure] = useState(null);\n  const { current, next, prev } = useStep(0, 3);\n  const history = useHistory();\n\n  const onFinishService = (values) => {\n    const { id, fullName, __typename, ...rest } = customer;\n    addService({\n      variables: {\n        input: {\n          customerId: id,\n          ...rest,\n          modeleId: modele.id,\n          ...measure,\n          ...values,\n        },\n      },\n    })\n      .then(({ data: { addService } }) => {\n        notification.success({\n          message: `Serivce ${addService.code} créé avec succès !`,\n          duration: 20,\n        });\n        history.push(\"/service\");\n      })\n      .catch(() => {\n        notification.error({ message: \"Erreur !\" });\n      });\n  };\n\n  return (\n    <Theme>\n      <div className={styles.container}>\n        <Row justify=\"center\">\n          <Col xs={24} sm={24} md={24} lg={16}>\n            <Card\n              title={\n                current === 0 ? (\n                  \"Prendre un service \"\n                ) : (\n                  <Button\n                    onClick={prev}\n                    type=\"link\"\n                    icon={<ArrowLeftOutlined />}\n                  >\n                    Retour\n                  </Button>\n                )\n              }\n            >\n              <Step current={current} />\n            </Card>\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col xs={24} sm={24} md={24} lg={16}>\n            <Card>\n              <AddCustomer\n                visible={addModal}\n                onFinish={(customer) => {\n                  setCustomer(customer);\n                  addModalToggle();\n                  next();\n                }}\n                onCancel={addModalToggle}\n              />\n              <SelectCustomer\n                visible={selectModal}\n                onCancel={selectModalToggle}\n                onSelected={(customer) => {\n                  setCustomer(customer);\n                  selectModalToggle();\n                  next();\n                }}\n              />\n              {current === 0 && (\n                <Space>\n                  <Button\n                    onClick={selectModalToggle}\n                    type=\"primary\"\n                    icon={<SelectOutlined />}\n                  />\n                  <Button onClick={addModalToggle} icon={<UserAddOutlined />} />\n                </Space>\n              )}\n              {current === 1 && (\n                <ChoiceModele\n                  onChoice={(modele) => {\n                    setModele(modele);\n                    next();\n                  }}\n                />\n              )}\n              {current === 2 && (\n                <Measure\n                  onFinish={(measure) => {\n                    setMeasure(measure);\n                    next();\n                  }}\n                  customer={customer}\n                />\n              )}\n              {current === 3 && (\n                <ServiceForm onFinish={onFinishService} loading={loading} />\n              )}\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </Theme>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}