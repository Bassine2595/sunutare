{"ast":null,"code":"import gql from \"graphql-tag\";\nexport const EmployersCount = gql`\n  query($workshopId: UUID!) {\n    employers(condition: { workshopId: $workshopId }) {\n      totalCount\n    }\n  }\n`;\nexport const ServicesCount = gql`\n  query($workshopId: UUID!) {\n    services(condition: { workshopId: $workshopId }) {\n      totalCount\n    }\n  }\n`;\nexport const ModelesCount = gql`\n  query($workshopId: UUID!) {\n    modeles(condition: { workshopId: $workshopId }) {\n      totalCount\n    }\n  }\n`;\nexport const PRESSURERATE = gql`\n  query($week: Datetime, $workshopId: UUID) {\n    averageNumberOfServicesPerWeeks(condition: { workshopId: $workshopId }) {\n      nodes {\n        workshopId\n        avg\n      }\n    }\n    numberOfServiceToStartDuringWeeks(\n      condition: { week: $week, workshopId: $workshopId }\n    ) {\n      nodes {\n        week\n        count\n      }\n    }\n  }\n`;\nexport const SERVICEDELIVEREDWITHIN7DAYS = gql`\n  query($ends: Date!, $workshopId: UUID!) {\n    services(\n      filter: { dateFinish: { lessThanOrEqualTo: $ends } }\n      condition: { workshopId: $workshopId }\n    ) {\n      totalCount\n    }\n  }\n`;\nexport const NUMBEROFSERVICEPERDAYS = gql`\n  query($workshopId: UUID) {\n    all: numberOfServicePerDays(condition: { workshopId: $workshopId }) {\n      nodes {\n        count\n        day\n      }\n    }\n  }\n`;\nexport const NUMBEROFSERVICEPERMONTHS = gql`\n  query($workshopId: UUID) {\n    all: numberOfServicePerMonths(condition: { workshopId: $workshopId }) {\n      nodes {\n        count\n        month\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/Gql/Aggregate.ts"],"names":["gql","EmployersCount","ServicesCount","ModelesCount","PRESSURERATE","SERVICEDELIVEREDWITHIN7DAYS","NUMBEROFSERVICEPERDAYS","NUMBEROFSERVICEPERMONTHS"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,cAAc,GAAGD,GAAI;;;;;;CAA3B;AAQP,OAAO,MAAME,aAAa,GAAGF,GAAI;;;;;;CAA1B;AAQP,OAAO,MAAMG,YAAY,GAAGH,GAAI;;;;;;CAAzB;AAQP,OAAO,MAAMI,YAAY,GAAGJ,GAAI;;;;;;;;;;;;;;;;;CAAzB;AAmBP,OAAO,MAAMK,2BAA2B,GAAGL,GAAI;;;;;;;;;CAAxC;AAWP,OAAO,MAAMM,sBAAsB,GAAGN,GAAI;;;;;;;;;CAAnC;AAWP,OAAO,MAAMO,wBAAwB,GAAGP,GAAI;;;;;;;;;CAArC","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const EmployersCount = gql`\n  query($workshopId: UUID!) {\n    employers(condition: { workshopId: $workshopId }) {\n      totalCount\n    }\n  }\n`;\n\nexport const ServicesCount = gql`\n  query($workshopId: UUID!) {\n    services(condition: { workshopId: $workshopId }) {\n      totalCount\n    }\n  }\n`;\n\nexport const ModelesCount = gql`\n  query($workshopId: UUID!) {\n    modeles(condition: { workshopId: $workshopId }) {\n      totalCount\n    }\n  }\n`;\n\nexport const PRESSURERATE = gql`\n  query($week: Datetime, $workshopId: UUID) {\n    averageNumberOfServicesPerWeeks(condition: { workshopId: $workshopId }) {\n      nodes {\n        workshopId\n        avg\n      }\n    }\n    numberOfServiceToStartDuringWeeks(\n      condition: { week: $week, workshopId: $workshopId }\n    ) {\n      nodes {\n        week\n        count\n      }\n    }\n  }\n`;\n\nexport const SERVICEDELIVEREDWITHIN7DAYS = gql`\n  query($ends: Date!, $workshopId: UUID!) {\n    services(\n      filter: { dateFinish: { lessThanOrEqualTo: $ends } }\n      condition: { workshopId: $workshopId }\n    ) {\n      totalCount\n    }\n  }\n`;\n\nexport const NUMBEROFSERVICEPERDAYS = gql`\n  query($workshopId: UUID) {\n    all: numberOfServicePerDays(condition: { workshopId: $workshopId }) {\n      nodes {\n        count\n        day\n      }\n    }\n  }\n`;\n\nexport const NUMBEROFSERVICEPERMONTHS = gql`\n  query($workshopId: UUID) {\n    all: numberOfServicePerMonths(condition: { workshopId: $workshopId }) {\n      nodes {\n        count\n        month\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}