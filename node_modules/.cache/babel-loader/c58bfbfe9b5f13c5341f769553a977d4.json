{"ast":null,"code":"import gql from \"graphql-tag\";\nexport const CURRENTUSER = gql`\n  {\n    currentUser {\n      id\n      firstName\n      lastName\n      phone\n      mail\n      gender\n      isActive\n      isEmployer\n      workshop: workshopById {\n        slogan\n        site\n        phone\n        name\n        mail\n        id\n        fixe\n        speciality\n        createdAt\n        address {\n          city\n          comment\n          nodeId\n          number\n          street\n          id\n        }\n      }\n    }\n  }\n`;\nexport const MODELES = gql`\n  query($workshopId: UUID, $typeModele: TypeModele, $canner: Canner) {\n    modeles(\n      condition: {\n        workshopId: $workshopId\n        typeModele: $typeModele\n        canner: $canner\n      }\n    ) {\n      nodes {\n        id\n        canner\n        typeModele\n        imageFile\n        name\n        description\n      }\n    }\n  }\n`;\nexport const MESSAGEBYSUBJECT = gql`\n  query($subject: String!) {\n    messages(condition: { subject: $subject, isCustomised: false }) {\n      nodes {\n        message\n        id\n      }\n    }\n  }\n`;\nexport const MODELE = gql`\n  query($id: UUID!) {\n    modele(id: $id) {\n      canner\n      id\n      imageFile\n      name\n      createdAt\n    }\n  }\n`;\nexport const CURRENTUSERID = gql`\n  query {\n    id: currentUserId\n  }\n`;\nexport const EMPLOYERSBYWORKSHOPID = gql`\n  query($workshopId: UUID!, $onlyfullname: Boolean = false) {\n    employers(condition: { workshopId: $workshopId }) {\n      nodes {\n        fullName\n        id\n        phone @skip(if: $onlyfullname)\n        mail @skip(if: $onlyfullname)\n        contract @skip(if: $onlyfullname)\n        city @skip(if: $onlyfullname)\n        comment @skip(if: $onlyfullname)\n        number @skip(if: $onlyfullname)\n        street @skip(if: $onlyfullname)\n        zip @skip(if: $onlyfullname)\n      }\n    }\n  }\n`;\nexport const SERVICES = gql`\n  query(\n    $workshopId: UUID!\n    $isCut: Boolean\n    $isDelivered: Boolean\n    $isOver: Boolean\n    $isStarded: Boolean\n  ) {\n    services(\n      condition: {\n        workshopId: $workshopId\n        isCut: $isCut\n        isDelivered: $isDelivered\n        isOver: $isOver\n        isStarded: $isStarded\n      }\n      orderBy: CREATED_AT_DESC\n    ) {\n      nodes {\n        id\n        avance\n        createdAt\n        comment\n        dateBegin\n        dateFinish\n        price\n        typeTissu\n        code\n        isCut\n        isOver\n        isStarded\n        progress\n        imageFile\n        modele {\n          imageFile\n          name\n        }\n      }\n    }\n  }\n`;\nexport const SERVICE = gql`\n  query($id: UUID!) {\n    service(id: $id) {\n      avance\n      comment\n      createdAt\n      dateBegin\n      dateFinish\n      imageFile\n      modele {\n        imageFile\n        name\n        canner\n        description\n      }\n      customer {\n        fullName\n        phone\n        mail\n        id\n      }\n      measure {\n        breasts\n        createdAt\n        hips\n        id\n        length\n        longSleeve\n        lowsLeeve\n        pants\n        width\n      }\n      employes: employersByServiceId {\n        nodes {\n          fullName\n        }\n      }\n    }\n  }\n`;\nexport const SERVICEBYDATE = gql`\n  query(\n    $dateFinish: Date\n    $dateBegin: Date\n    $isStarded: Boolean\n    $workshopId: UUID!\n  ) {\n    services(\n      condition: {\n        dateFinish: $dateFinish\n        dateBegin: $dateBegin\n        workshopId: $workshopId\n        isStarded: $isStarded\n      }\n      orderBy: CREATED_AT_ASC\n    ) {\n      nodes {\n        imageFile\n        id\n        avance\n        code\n        comment\n        dateFinish\n        dateBegin\n        typeTissu\n        price\n        employers: employersByServiceId {\n          nodes {\n            firstName\n            gender\n            id\n            lastName\n          }\n        }\n        modele {\n          imageFile\n        }\n        isCut\n        isDelivered\n        isOver\n        isStarded\n        progress\n      }\n    }\n  }\n`;\nexport const CUSTUMERBYWORKSHOPID = gql`\n  query($workshopId: UUID!) {\n    customers: customersWorkshops(condition: { workshopId: $workshopId }) {\n      nodes {\n        id\n        fullName\n        phone\n      }\n    }\n  }\n`;\nexport const SERVICEBYCODE = gql`\n  query($code: Int!) {\n    serviceByCode(code: $code) {\n      avance\n      comment\n      createdAt\n      dateBegin\n      dateFinish\n      id\n      imageFile\n      isDelivered\n      modeleId\n      nbStart\n      nodeId\n      price\n      typeTissu\n      updateAt\n      workshopId\n      isCut\n      isOver\n      isStarded\n    }\n  }\n`;\nexport const SERVICESBYEMPLOYER = gql`\n  query($workshopId: UUID!, $employerId: UUID!) {\n    services: servicesByEmployers(\n      condition: { workshopId: $workshopId, employerId: $employerId }\n    ) {\n      nodes {\n        dateBegin\n        employerId\n        id\n        imageFile\n        progress\n        workshopId\n      }\n    }\n  }\n`;\nexport const SERVICEBYNODEID = gql`\n  query($nodeId: ID!) {\n    serviceByNodeId(nodeId: $nodeId) {\n      id\n      dateBegin\n      dateFinish\n      progress\n      isCut\n      isDelivered\n      isOver\n      isStarded\n      createdAt\n      code\n    }\n  }\n`;\nexport const SERVICEBYMONTH = gql`\n  query($month: Datetime!, $workshopId: UUID!) {\n    services: servicesByMonths(\n      condition: { month: $month, workshopId: $workshopId }\n    ) {\n      nodes {\n        dateBegin\n        dateFinish\n        imageFile\n        id\n        month\n        progress\n      }\n    }\n  }\n`;\nexport const GETENUMLABELS = gql`\n  query($enumName: String!) {\n    getEnumLabels(enumName: $enumName) {\n      nodes\n    }\n  }\n`;\nexport const NOTIFICATIONS = gql`\n  query($workshopId: UUID!, $onlyTotalCount: Boolean = true) {\n    notifications(condition: { isProcessed: false, workshopId: $workshopId }) {\n      totalCount\n      nodes @skip(if: $onlyTotalCount) {\n        createdAt\n        customerId\n        customersFullName\n        id\n        isProcessed\n        message\n        messageId\n        serviceId\n        subject\n        typeNotification\n        workshopId\n      }\n    }\n  }\n`;\nexport const CUSTOMERSBYWORKSHOPID = gql`\n query ($worshopId : UUID!) {\n  customersWorkshops(condition: {workshopId: $worshopId }) {\n    nodes {\n      addressId\n      city\n      fullName\n      mail\n      gender\n      firstName\n      lastName\n      phone\n      street\n      zip\n    }\n  }\n}`;","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/Gql/Query.ts"],"names":["gql","CURRENTUSER","MODELES","MESSAGEBYSUBJECT","MODELE","CURRENTUSERID","EMPLOYERSBYWORKSHOPID","SERVICES","SERVICE","SERVICEBYDATE","CUSTUMERBYWORKSHOPID","SERVICEBYCODE","SERVICESBYEMPLOYER","SERVICEBYNODEID","SERVICEBYMONTH","GETENUMLABELS","NOTIFICATIONS","CUSTOMERSBYWORKSHOPID"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAxB;AAkCP,OAAO,MAAME,OAAO,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;CAApB;AAqBP,OAAO,MAAMG,gBAAgB,GAAGH,GAAI;;;;;;;;;CAA7B;AAWP,OAAO,MAAMI,MAAM,GAAGJ,GAAI;;;;;;;;;;CAAnB;AAYP,OAAO,MAAMK,aAAa,GAAGL,GAAI;;;;CAA1B;AAMP,OAAO,MAAMM,qBAAqB,GAAGN,GAAI;;;;;;;;;;;;;;;;;CAAlC;AAmBP,OAAO,MAAMO,QAAQ,GAAGP,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAArB;AA0CP,OAAO,MAAMQ,OAAO,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAApB;AAyCP,OAAO,MAAMS,aAAa,GAAGT,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA1B;AA+CP,OAAO,MAAMU,oBAAoB,GAAGV,GAAI;;;;;;;;;;CAAjC;AAYP,OAAO,MAAMW,aAAa,GAAGX,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAA1B;AAyBP,OAAO,MAAMY,kBAAkB,GAAGZ,GAAI;;;;;;;;;;;;;;;CAA/B;AAiBP,OAAO,MAAMa,eAAe,GAAGb,GAAI;;;;;;;;;;;;;;;CAA5B;AAiBP,OAAO,MAAMc,cAAc,GAAGd,GAAI;;;;;;;;;;;;;;;CAA3B;AAiBP,OAAO,MAAMe,aAAa,GAAGf,GAAI;;;;;;CAA1B;AAQP,OAAO,MAAMgB,aAAa,GAAGhB,GAAI;;;;;;;;;;;;;;;;;;;CAA1B;AAqBP,OAAO,MAAMiB,qBAAqB,GAAEjB,GAAI;;;;;;;;;;;;;;;;EAAjC","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const CURRENTUSER = gql`\n  {\n    currentUser {\n      id\n      firstName\n      lastName\n      phone\n      mail\n      gender\n      isActive\n      isEmployer\n      workshop: workshopById {\n        slogan\n        site\n        phone\n        name\n        mail\n        id\n        fixe\n        speciality\n        createdAt\n        address {\n          city\n          comment\n          nodeId\n          number\n          street\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const MODELES = gql`\n  query($workshopId: UUID, $typeModele: TypeModele, $canner: Canner) {\n    modeles(\n      condition: {\n        workshopId: $workshopId\n        typeModele: $typeModele\n        canner: $canner\n      }\n    ) {\n      nodes {\n        id\n        canner\n        typeModele\n        imageFile\n        name\n        description\n      }\n    }\n  }\n`;\n\nexport const MESSAGEBYSUBJECT = gql`\n  query($subject: String!) {\n    messages(condition: { subject: $subject, isCustomised: false }) {\n      nodes {\n        message\n        id\n      }\n    }\n  }\n`;\n\nexport const MODELE = gql`\n  query($id: UUID!) {\n    modele(id: $id) {\n      canner\n      id\n      imageFile\n      name\n      createdAt\n    }\n  }\n`;\n\nexport const CURRENTUSERID = gql`\n  query {\n    id: currentUserId\n  }\n`;\n\nexport const EMPLOYERSBYWORKSHOPID = gql`\n  query($workshopId: UUID!, $onlyfullname: Boolean = false) {\n    employers(condition: { workshopId: $workshopId }) {\n      nodes {\n        fullName\n        id\n        phone @skip(if: $onlyfullname)\n        mail @skip(if: $onlyfullname)\n        contract @skip(if: $onlyfullname)\n        city @skip(if: $onlyfullname)\n        comment @skip(if: $onlyfullname)\n        number @skip(if: $onlyfullname)\n        street @skip(if: $onlyfullname)\n        zip @skip(if: $onlyfullname)\n      }\n    }\n  }\n`;\n\nexport const SERVICES = gql`\n  query(\n    $workshopId: UUID!\n    $isCut: Boolean\n    $isDelivered: Boolean\n    $isOver: Boolean\n    $isStarded: Boolean\n  ) {\n    services(\n      condition: {\n        workshopId: $workshopId\n        isCut: $isCut\n        isDelivered: $isDelivered\n        isOver: $isOver\n        isStarded: $isStarded\n      }\n      orderBy: CREATED_AT_DESC\n    ) {\n      nodes {\n        id\n        avance\n        createdAt\n        comment\n        dateBegin\n        dateFinish\n        price\n        typeTissu\n        code\n        isCut\n        isOver\n        isStarded\n        progress\n        imageFile\n        modele {\n          imageFile\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const SERVICE = gql`\n  query($id: UUID!) {\n    service(id: $id) {\n      avance\n      comment\n      createdAt\n      dateBegin\n      dateFinish\n      imageFile\n      modele {\n        imageFile\n        name\n        canner\n        description\n      }\n      customer {\n        fullName\n        phone\n        mail\n        id\n      }\n      measure {\n        breasts\n        createdAt\n        hips\n        id\n        length\n        longSleeve\n        lowsLeeve\n        pants\n        width\n      }\n      employes: employersByServiceId {\n        nodes {\n          fullName\n        }\n      }\n    }\n  }\n`;\n\nexport const SERVICEBYDATE = gql`\n  query(\n    $dateFinish: Date\n    $dateBegin: Date\n    $isStarded: Boolean\n    $workshopId: UUID!\n  ) {\n    services(\n      condition: {\n        dateFinish: $dateFinish\n        dateBegin: $dateBegin\n        workshopId: $workshopId\n        isStarded: $isStarded\n      }\n      orderBy: CREATED_AT_ASC\n    ) {\n      nodes {\n        imageFile\n        id\n        avance\n        code\n        comment\n        dateFinish\n        dateBegin\n        typeTissu\n        price\n        employers: employersByServiceId {\n          nodes {\n            firstName\n            gender\n            id\n            lastName\n          }\n        }\n        modele {\n          imageFile\n        }\n        isCut\n        isDelivered\n        isOver\n        isStarded\n        progress\n      }\n    }\n  }\n`;\n\nexport const CUSTUMERBYWORKSHOPID = gql`\n  query($workshopId: UUID!) {\n    customers: customersWorkshops(condition: { workshopId: $workshopId }) {\n      nodes {\n        id\n        fullName\n        phone\n      }\n    }\n  }\n`;\n\nexport const SERVICEBYCODE = gql`\n  query($code: Int!) {\n    serviceByCode(code: $code) {\n      avance\n      comment\n      createdAt\n      dateBegin\n      dateFinish\n      id\n      imageFile\n      isDelivered\n      modeleId\n      nbStart\n      nodeId\n      price\n      typeTissu\n      updateAt\n      workshopId\n      isCut\n      isOver\n      isStarded\n    }\n  }\n`;\n\nexport const SERVICESBYEMPLOYER = gql`\n  query($workshopId: UUID!, $employerId: UUID!) {\n    services: servicesByEmployers(\n      condition: { workshopId: $workshopId, employerId: $employerId }\n    ) {\n      nodes {\n        dateBegin\n        employerId\n        id\n        imageFile\n        progress\n        workshopId\n      }\n    }\n  }\n`;\n\nexport const SERVICEBYNODEID = gql`\n  query($nodeId: ID!) {\n    serviceByNodeId(nodeId: $nodeId) {\n      id\n      dateBegin\n      dateFinish\n      progress\n      isCut\n      isDelivered\n      isOver\n      isStarded\n      createdAt\n      code\n    }\n  }\n`;\n\nexport const SERVICEBYMONTH = gql`\n  query($month: Datetime!, $workshopId: UUID!) {\n    services: servicesByMonths(\n      condition: { month: $month, workshopId: $workshopId }\n    ) {\n      nodes {\n        dateBegin\n        dateFinish\n        imageFile\n        id\n        month\n        progress\n      }\n    }\n  }\n`;\n\nexport const GETENUMLABELS = gql`\n  query($enumName: String!) {\n    getEnumLabels(enumName: $enumName) {\n      nodes\n    }\n  }\n`;\n\nexport const NOTIFICATIONS = gql`\n  query($workshopId: UUID!, $onlyTotalCount: Boolean = true) {\n    notifications(condition: { isProcessed: false, workshopId: $workshopId }) {\n      totalCount\n      nodes @skip(if: $onlyTotalCount) {\n        createdAt\n        customerId\n        customersFullName\n        id\n        isProcessed\n        message\n        messageId\n        serviceId\n        subject\n        typeNotification\n        workshopId\n      }\n    }\n  }\n`;\n\nexport const CUSTOMERSBYWORKSHOPID= gql`\n query ($worshopId : UUID!) {\n  customersWorkshops(condition: {workshopId: $worshopId }) {\n    nodes {\n      addressId\n      city\n      fullName\n      mail\n      gender\n      firstName\n      lastName\n      phone\n      street\n      zip\n    }\n  }\n}`;\n"]},"metadata":{},"sourceType":"module"}