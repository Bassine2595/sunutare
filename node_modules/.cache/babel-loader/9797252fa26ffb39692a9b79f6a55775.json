{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar _throttle = require(\"../../util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\nvar Sausage = require(\"../../util/shape/sausage\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls || [];\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, layout);\n        bgEl.useStyle(backgroundModel.getBarItemStyle());\n        bgEls[dataIndex] = bgEl;\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = oldBgEls[oldIndex];\n        bgEl.useStyle(backgroundModel.getBarItemStyle());\n        bgEls[newIndex] = bgEl;\n        var shape = createBackgroundShape(isHorizontalOrRadial, layout, coord);\n        graphic.updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  },\n  _removeBackground: function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  }\n});\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea) {\n    return false;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout),\n      z2: 1\n    });\n    rect.name = 'item'; // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var stroke = data.getVisual('borderColor');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\n    fill: isZeroOnPolar(layout) ? 'none' : color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  if (isZeroOnPolar(layout)) {\n    hoverStyle.fill = hoverStyle.stroke = 'none';\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      __startPoint: backgroundStartPoint,\n      __baseDimIdx: baseDimIdx,\n      __largeDataIndices: largeDataIndices,\n      __barWidth: barWidth,\n      silent: true,\n      z2: 0\n    });\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: largeDataIndices,\n    __barWidth: barWidth\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  var coordLayout;\n  var isPolar = coord.type === 'polar';\n\n  if (isPolar) {\n    coordLayout = coord.getArea();\n  } else {\n    coordLayout = coord.grid.getRect();\n  }\n\n  if (isPolar) {\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : layout.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : layout.r,\n      startAngle: isHorizontalOrRadial ? layout.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? layout.endAngle : Math.PI * 2\n    };\n  } else {\n    return {\n      x: isHorizontalOrRadial ? layout.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : layout.y,\n      width: isHorizontalOrRadial ? layout.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : layout.height\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? graphic.Sector : graphic.Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/node_modules/echarts/lib/chart/bar/BarView.js"],"names":["_config","require","__DEV__","echarts","zrUtil","graphic","_helper","setLabel","Model","barItemStyle","Path","Group","_throttle","throttle","_createClipPathFromCoordSys","createClipPath","Sausage","BAR_BORDER_WIDTH_QUERY","_eventPos","extend","prototype","getClipArea","coord","data","coordSysClipArea","getArea","type","baseAxis","getBaseAxis","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","_default","extendChartView","render","seriesModel","ecModel","api","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","group","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","needsClip","removeClipPath","roundCap","drawBackground","backgroundModel","getModel","bgEls","oldBgEls","_backgroundEls","diff","add","dataIndex","itemModel","getItemModel","layout","bgEl","createBackgroundEl","useStyle","getBarItemStyle","hasValue","isClipped","clip","remove","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","shape","createBackgroundShape","updateProps","getItemGraphicEl","removeRect","removeSector","execute","bgGroup","_backgroundGroup","removeAll","i","length","createLarge","clipPath","setClipPath","_removeBackground","dispose","noop","eachItemGraphicEl","mathMax","Math","max","mathMin","min","cartesian2d","coordSysBoundingRect","signWidth","signHeight","x2","y2","clipped","polar","isUpdate","rect","Rect","z2","name","rectShape","animateProperty","animateTarget","isRadial","clockwise","startAngle","endAngle","ShapeClass","Sector","sector","defaults","sectorShape","style","text","parent","r","r0","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isZeroOnPolar","isPolar","color","getItemVisual","opacity","stroke","getVisual","itemStyleModel","hoverStyle","setShape","fill","cursorStyle","getShallow","attr","labelPositionOutside","setHoverStyle","rawLayout","lineWidth","isNaN","Number","MAX_VALUE","abs","LargePath","points","buildPath","ctx","startPoint","__startPoint","baseDimIdx","__baseDimIdx","moveTo","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","__largeDataIndices","__barWidth","silent","setLargeBackgroundStyle","setLargeStyle","seriesIndex","on","largePathUpdateDataIndex","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","len","ii","barBaseVal","barValueVal","borderColor","itemStyle","getItemStyle","coordLayout","grid","getRect","PI","ElementClz","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar _throttle = require(\"../../util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\nvar Sausage = require(\"../../util/shape/sausage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls || [];\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, layout);\n        bgEl.useStyle(backgroundModel.getBarItemStyle());\n        bgEls[dataIndex] = bgEl;\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = oldBgEls[oldIndex];\n        bgEl.useStyle(backgroundModel.getBarItemStyle());\n        bgEls[newIndex] = bgEl;\n        var shape = createBackgroundShape(isHorizontalOrRadial, layout, coord);\n        graphic.updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  },\n  _removeBackground: function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  }\n});\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea) {\n    return false;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout),\n      z2: 1\n    });\n    rect.name = 'item'; // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var stroke = data.getVisual('borderColor');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\n    fill: isZeroOnPolar(layout) ? 'none' : color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  if (isZeroOnPolar(layout)) {\n    hoverStyle.fill = hoverStyle.stroke = 'none';\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      __startPoint: backgroundStartPoint,\n      __baseDimIdx: baseDimIdx,\n      __largeDataIndices: largeDataIndices,\n      __barWidth: barWidth,\n      silent: true,\n      z2: 0\n    });\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: largeDataIndices,\n    __barWidth: barWidth\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  var coordLayout;\n  var isPolar = coord.type === 'polar';\n\n  if (isPolar) {\n    coordLayout = coord.getArea();\n  } else {\n    coordLayout = coord.grid.getRect();\n  }\n\n  if (isPolar) {\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : layout.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : layout.r,\n      startAngle: isHorizontalOrRadial ? layout.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? layout.endAngle : Math.PI * 2\n    };\n  } else {\n    return {\n      x: isHorizontalOrRadial ? layout.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : layout.y,\n      width: isHorizontalOrRadial ? layout.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : layout.height\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? graphic.Sector : graphic.Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}