{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Shared/Modal/Follow.tsx\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { followModalToggle, refetchableToggle } from \"../../../reducers/service/Reducer\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATESERVICEBYCODE } from \"../../../Gql/Mutation\";\nimport { Service } from \"../../User/Service/Display\";\nimport { ButtonCheck, ButtonCancel } from \"../Button\";\nexport const FollowModal = () => {\n  const dispatch = useDispatch();\n  const {\n    followModal,\n    service\n  } = useSelector(({\n    serviceModal\n  }) => serviceModal);\n  const [cut, setCut] = useState(service === null || service === void 0 ? void 0 : service.isCut);\n  const [over, setOver] = useState(service === null || service === void 0 ? void 0 : service.isOver);\n  const [start, setStart] = useState(service === null || service === void 0 ? void 0 : service.isStarded);\n  const [editService, {\n    loading\n  }] = useMutation(UPDATESERVICEBYCODE);\n\n  const onFinish = () => {\n    editService({\n      variables: {\n        code: parseInt(service.code),\n        patch: {\n          isOver: over,\n          isCut: cut,\n          isStarded: start\n        }\n      }\n    }).then(() => {\n      dispatch(followModalToggle());\n\n      _notification.success({\n        message: \"Etape validée avec succès !\"\n      });\n\n      dispatch(refetchableToggle());\n    }).catch(() => {\n      _notification.error({\n        message: \"Une erreur est survenue !\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(_Modal, {\n    key: service === null || service === void 0 ? void 0 : service.id,\n    style: {\n      top: 10\n    },\n    width: 400,\n    title: \"Suivre un service\",\n    closable: false,\n    visible: followModal,\n    footer: [/*#__PURE__*/React.createElement(ButtonCheck, {\n      loading: loading,\n      key: \"check\",\n      onClick: onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ButtonCancel, {\n      key: \"cancel\",\n      onClick: () => dispatch(followModalToggle()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Service, {\n    service: service,\n    noExtra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_Checkbox, {\n    checked: start,\n    onChange: ({\n      target: {\n        checked\n      }\n    }) => setStart(checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"D\\xE9marr\\xE9\"), /*#__PURE__*/React.createElement(_Checkbox, {\n    disabled: !start,\n    checked: cut,\n    onChange: ({\n      target: {\n        checked\n      }\n    }) => setCut(checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Coup\\xE9\"), /*#__PURE__*/React.createElement(_Checkbox, {\n    disabled: !cut,\n    checked: over,\n    onChange: ({\n      target: {\n        checked\n      }\n    }) => setOver(checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Terminin\\xE9\"));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Shared/Modal/Follow.tsx"],"names":["React","useState","useSelector","useDispatch","followModalToggle","refetchableToggle","useMutation","UPDATESERVICEBYCODE","Service","ButtonCheck","ButtonCancel","FollowModal","dispatch","followModal","service","serviceModal","cut","setCut","isCut","over","setOver","isOver","start","setStart","isStarded","editService","loading","onFinish","variables","code","parseInt","patch","then","success","message","catch","error","id","top","target","checked"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Divider, Checkbox, notification } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ReducerType } from \"../../../reducers/Reducer\";\nimport {\n  followModalToggle,\n  refetchableToggle,\n} from \"../../../reducers/service/Reducer\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATESERVICEBYCODE } from \"../../../Gql/Mutation\";\nimport { Service } from \"../../User/Service/Display\";\nimport { ButtonCheck, ButtonCancel } from \"../Button\";\n\nexport const FollowModal = () => {\n  const dispatch = useDispatch();\n  const { followModal, service } = useSelector(\n    ({ serviceModal }: ReducerType) => serviceModal\n  );\n  const [cut, setCut] = useState(service?.isCut);\n  const [over, setOver] = useState(service?.isOver);\n  const [start, setStart] = useState(service?.isStarded);\n  const [editService, { loading }] = useMutation(UPDATESERVICEBYCODE);\n\n  const onFinish = () => {\n    editService({\n      variables: {\n        code: parseInt(service.code),\n        patch: {\n          isOver: over,\n          isCut: cut,\n          isStarded: start,\n        },\n      },\n    })\n      .then(() => {\n        dispatch(followModalToggle());\n        notification.success({ message: \"Etape validée avec succès !\" });\n        dispatch(refetchableToggle());\n      })\n      .catch(() => {\n        notification.error({ message: \"Une erreur est survenue !\" });\n      });\n  };\n\n  return (\n    <Modal\n      key={service?.id}\n      style={{ top: 10 }}\n      width={400}\n      title=\"Suivre un service\"\n      closable={false}\n      visible={followModal}\n      footer={[\n        <ButtonCheck loading={loading} key=\"check\" onClick={onFinish} />,\n        <ButtonCancel\n          key=\"cancel\"\n          onClick={() => dispatch(followModalToggle())}\n        />,\n      ]}\n    >\n      <Service service={service} noExtra />\n      <Divider />\n      <Checkbox\n        checked={start}\n        onChange={({ target: { checked } }) => setStart(checked)}\n      >\n        Démarré\n      </Checkbox>\n      <Checkbox\n        disabled={!start}\n        checked={cut}\n        onChange={({ target: { checked } }) => setCut(checked)}\n      >\n        Coupé\n      </Checkbox>\n      <Checkbox\n        disabled={!cut}\n        checked={over}\n        onChange={({ target: { checked } }) => setOver(checked)}\n      >\n        Termininé\n      </Checkbox>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}