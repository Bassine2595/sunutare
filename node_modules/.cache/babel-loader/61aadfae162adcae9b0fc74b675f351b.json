{"ast":null,"code":"import \"antd/es/alert/style\";\nimport _Alert from \"antd/es/alert\";\nimport \"antd/es/skeleton/style\";\nimport _Skeleton from \"antd/es/skeleton\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/ServiceByCode.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { SERVICEBYCODE } from \"../../../Gql/Query\";\nexport const ServiceByCode = ({\n  code,\n  onFind\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SERVICEBYCODE, {\n    variables: {\n      code: parseInt(code),\n      isOver: true\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(_Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(_Alert, {\n      showIcon: true,\n      type: \"error\",\n      message: \"Une erreur est survenue r\\xE9essay\\xE9 plus tard !\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (data && data.serviceByCode) {\n    onFind(data.serviceByCode);\n    return /*#__PURE__*/React.createElement(_Alert, {\n      showIcon: true,\n      type: \"info\",\n      message: `Service ${code} !`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(_Alert, {\n    showIcon: true,\n    type: \"info\",\n    message: `Le code ${code} ne correspond pas à un service !`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/ServiceByCode.tsx"],"names":["React","useQuery","SERVICEBYCODE","ServiceByCode","code","onFind","data","loading","error","variables","parseInt","isOver","serviceByCode"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAGA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACC,aAAD,EAAgB;AACvDO,IAAAA,SAAS,EAAE;AAAEL,MAAAA,IAAI,EAAEM,QAAQ,CAACN,IAAD,CAAhB;AAAwBO,MAAAA,MAAM,EAAE;AAAhC;AAD4C,GAAhB,CAAzC;;AAGA,MAAIJ,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,wBACE;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAC,oDAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AACD,MAAIF,IAAI,IAAIA,IAAI,CAACM,aAAjB,EAAgC;AAC9BP,IAAAA,MAAM,CAACC,IAAI,CAACM,aAAN,CAAN;AACA,wBAAO;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,IAAI,EAAC,MAArB;AAA4B,MAAA,OAAO,EAAG,WAAUR,IAAK,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,OAAO,EAAG,WAAUA,IAAK,mCAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CA3BM","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { SERVICEBYCODE } from \"../../../Gql/Query\";\nimport { Skeleton, Alert } from \"antd\";\n\nexport const ServiceByCode = ({ code, onFind }) => {\n  const { data, loading, error } = useQuery(SERVICEBYCODE, {\n    variables: { code: parseInt(code), isOver: true },\n  });\n  if (loading) {\n    return <Skeleton />;\n  }\n  if (error) {\n    return (\n      <Alert\n        showIcon\n        type=\"error\"\n        message=\"Une erreur est survenue réessayé plus tard !\"\n      />\n    );\n  }\n  if (data && data.serviceByCode) {\n    onFind(data.serviceByCode);\n    return <Alert showIcon type=\"info\" message={`Service ${code} !`} />;\n  }\n  return (\n    <Alert\n      showIcon\n      type=\"info\"\n      message={`Le code ${code} ne correspond pas à un service !`}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}