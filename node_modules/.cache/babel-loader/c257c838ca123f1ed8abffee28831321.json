{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/skeleton/style\";\nimport _Skeleton from \"antd/es/skeleton\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/Show.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { SERVICE } from \"../../../Gql/Query\";\nimport { Display as DisplayMeasure } from \"../Measure/Display\";\nimport { Display as DisplayModele } from \"../Modele/Display\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport { ServiceDetail } from \"./Display\";\nconst {\n  Title\n} = _Typography;\nexport const Show = ({\n  serviceId,\n  onCancel,\n  visible\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(SERVICE, {\n    variables: {\n      id: serviceId\n    }\n  });\n  return /*#__PURE__*/React.createElement(_Modal, {\n    width: 800,\n    closeIcon: /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n      style: {\n        fontSize: 20,\n        color: \"#1DA57A\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }),\n    visible: visible,\n    onCancel: onCancel,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(_Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }) : data && /*#__PURE__*/React.createElement(_Card, {\n    bordered: false,\n    title: /*#__PURE__*/React.createElement(Title, {\n      type: \"secondary\",\n      level: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, data.service.customer.fullName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DisplayModele, Object.assign({}, data.service.modele, {\n    noMeta: true,\n    noExtra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ServiceDetail, {\n    employes: data.service.employes,\n    dateBegin: data.service.dateBegin,\n    dateFinish: data.service.dateFinish,\n    comment: data.service.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DisplayMeasure, Object.assign({}, data.service.measure, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }))))));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/Show.tsx"],"names":["React","useQuery","SERVICE","Display","DisplayMeasure","DisplayModele","CloseCircleOutlined","ServiceDetail","Title","Show","serviceId","onCancel","visible","data","loading","variables","id","fontSize","color","service","customer","fullName","modele","employes","dateBegin","dateFinish","comment","measure"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,SAASC,OAAO,IAAIC,cAApB,QAA0C,oBAA1C;AACA,SAASD,OAAO,IAAIE,aAApB,QAAyC,mBAAzC;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,MAAM;AAAEC,EAAAA;AAAF,eAAN;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA;AAAvB,CAAD,KAAsC;AACxD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBb,QAAQ,CAACC,OAAD,EAAU;AAAEa,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEN;AAAN;AAAb,GAAV,CAAlC;AACA,sBACE;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,SAAS,eACP,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAKE,IAAA,OAAO,EAAEN,OALX;AAME,IAAA,QAAQ,EAAED,QANZ;AAOE,IAAA,MAAM,EAAE,IAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGG,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGND,IAAI,iBACF;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,KAAK,eACH,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACM,OAAL,CAAaC,QAAb,CAAsBC,QADzB,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAK,IAAA,MAAM,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD,oBAAmBR,IAAI,CAACM,OAAL,CAAaG,MAAhC;AAAwC,IAAA,MAAM,MAA9C;AAA+C,IAAA,OAAO,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,eAIE;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAET,IAAI,CAACM,OAAL,CAAaI,QADzB;AAEE,IAAA,SAAS,EAAEV,IAAI,CAACM,OAAL,CAAaK,SAF1B;AAGE,IAAA,UAAU,EAAEX,IAAI,CAACM,OAAL,CAAaM,UAH3B;AAIE,IAAA,OAAO,EAAEZ,IAAI,CAACM,OAAL,CAAaO,OAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,cAAD,oBAAoBb,IAAI,CAACM,OAAL,CAAaQ,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,CAJF,CARF,CAbN,CADF;AAyCD,CA3CM","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { SERVICE } from \"../../../Gql/Query\";\nimport { Skeleton, Row, Col, Card, Modal, Typography } from \"antd\";\nimport { Display as DisplayMeasure } from \"../Measure/Display\";\nimport { Display as DisplayModele } from \"../Modele/Display\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport { ServiceDetail } from \"./Display\";\n\nconst { Title } = Typography;\n\nexport const Show = ({ serviceId, onCancel, visible }) => {\n  const { data, loading } = useQuery(SERVICE, { variables: { id: serviceId } });\n  return (\n    <Modal\n      width={800}\n      closeIcon={\n        <CloseCircleOutlined style={{ fontSize: 20, color: \"#1DA57A\" }} />\n      }\n      visible={visible}\n      onCancel={onCancel}\n      footer={null}\n    >\n      {loading ? (\n        <Skeleton />\n      ) : (\n        data && (\n          <Card\n            bordered={false}\n            title={\n              <Title type=\"secondary\" level={4}>\n                {data.service.customer.fullName}\n              </Title>\n            }\n          >\n            <Row gutter={8}>\n              <Col span={10}>\n                <DisplayModele {...data.service.modele} noMeta noExtra />\n              </Col>\n              <Col span={14}>\n                <ServiceDetail\n                  employes={data.service.employes}\n                  dateBegin={data.service.dateBegin}\n                  dateFinish={data.service.dateFinish}\n                  comment={data.service.comment}\n                />\n                <DisplayMeasure {...data.service.measure} />\n              </Col>\n            </Row>\n          </Card>\n        )\n      )}\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}