{"ast":null,"code":"import \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Modele/Form.tsx\";\nimport React, { useState } from \"react\";\nimport { FormItemName, FormItemDescription, FormItemTypeModele, FormItemCanner } from \"../../Shared/Input\";\nimport { validateMessages } from \"../../../Message\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { ButtonSave, ButtonEdit, ButtonFilter } from \"../../Shared/Button\";\nimport { deleteFile } from \"../../../Service\";\nimport _ from \"lodash\";\n\nconst remove = file => deleteFile({\n  uid: file.response ? file.response.uid : file.uid\n});\n\nexport const AddModeleForm = ({\n  onFinish,\n  loading\n}) => {\n  const [fileList, setFileList] = useState(null);\n\n  const handleChange = ({\n    file,\n    fileList\n  }) => {\n    console.log(file);\n    file.status === \"done\" && setFileList(fileList);\n  };\n\n  return /*#__PURE__*/React.createElement(_ConfigProvider, {\n    form: {\n      validateMessages\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    name: \"modele\",\n    onFinish: values => onFinish({ ...values,\n      imageFile: fileList.map(({\n        response\n      }) => response)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemCanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormItemTypeModele, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormItemName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormItemDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Upload, {\n    showUploadList: {\n      showPreviewIcon: false\n    },\n    onRemove: remove,\n    listType: \"picture-card\",\n    action: `${process.env.REACT_APP_BASE_URL_API}/upload/photos`,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 39\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Photo\"))), /*#__PURE__*/React.createElement(ButtonSave, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    disabled: _.isEmpty(fileList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n};\nexport const UpdateModeleForm = ({\n  initialValues,\n  onFinish,\n  loading\n}) => {\n  const [fileList, setFileList] = useState(initialValues.imageFile);\n\n  const handleChange = ({\n    fileList\n  }) => setFileList(fileList);\n\n  return /*#__PURE__*/React.createElement(_ConfigProvider, {\n    form: {\n      validateMessages\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    name: \"modele\",\n    onFinish: values => {\n      _.differenceWith(initialValues.imageFile, fileList, (a, b) => a.uid === b.uid).map(({\n        uid\n      }) => remove({\n        uid\n      }));\n\n      onFinish({ ...values,\n        imageFile: fileList.map(file => file.response ? file.response : file)\n      });\n    },\n    initialValues: initialValues,\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemCanner, {\n    label: \"Pour\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormItemTypeModele, {\n    label: \"Type de mod\\xE8le\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormItemName, {\n    label: \"Nom \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormItemDescription, {\n    label: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Upload, {\n    showUploadList: {\n      showPreviewIcon: false\n    },\n    listType: \"picture-card\",\n    action: `${process.env.REACT_APP_BASE_URL_API}/upload/photos`,\n    onChange: handleChange,\n    fileList: fileList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 39\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Photo\"))), /*#__PURE__*/React.createElement(ButtonEdit, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })));\n};\nexport const FormFilter = ({\n  onFinish\n}) => {\n  return /*#__PURE__*/React.createElement(_ConfigProvider, {\n    form: {\n      validateMessages\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    name: \"filter\",\n    onFinish: onFinish,\n    layout: \"inline\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemCanner, {\n    all: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormItemTypeModele, {\n    noRule: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ButtonFilter, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Modele/Form.tsx"],"names":["React","useState","FormItemName","FormItemDescription","FormItemTypeModele","FormItemCanner","validateMessages","UploadOutlined","ButtonSave","ButtonEdit","ButtonFilter","deleteFile","_","remove","file","uid","response","AddModeleForm","onFinish","loading","fileList","setFileList","handleChange","console","log","status","values","imageFile","map","showPreviewIcon","process","env","REACT_APP_BASE_URL_API","isEmpty","UpdateModeleForm","initialValues","differenceWith","a","b","FormFilter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ConfigProvider, Form, Upload, Button } from \"antd\";\nimport {\n  FormItemName,\n  FormItemDescription,\n  FormItemTypeModele,\n  FormItemCanner,\n} from \"../../Shared/Input\";\nimport { validateMessages } from \"../../../Message\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { ButtonSave, ButtonEdit, ButtonFilter } from \"../../Shared/Button\";\nimport { deleteFile } from \"../../../Service\";\nimport _ from \"lodash\";\n\nconst remove = (file) =>\n  deleteFile({ uid: file.response ? file.response.uid : file.uid });\n\nexport const AddModeleForm = ({ onFinish, loading }) => {\n  const [fileList, setFileList] = useState(null);\n\n  const handleChange = ({ file, fileList }) => {\n    console.log(file);\n    file.status === \"done\" && setFileList(fileList);\n  };\n\n  return (\n    <ConfigProvider form={{ validateMessages }}>\n      <Form\n        name=\"modele\"\n        onFinish={(values) =>\n          onFinish({\n            ...values,\n            imageFile: fileList.map(({ response }) => response),\n          })\n        }\n      >\n        <FormItemCanner />\n        <FormItemTypeModele />\n        <FormItemName />\n        <FormItemDescription />\n        <Form.Item>\n          <Upload\n            showUploadList={{ showPreviewIcon: false }}\n            onRemove={remove}\n            listType=\"picture-card\"\n            action={`${process.env.REACT_APP_BASE_URL_API}/upload/photos`}\n            onChange={handleChange}\n          >\n            <Button type=\"link\" icon={<UploadOutlined />}>\n              Photo\n            </Button>\n          </Upload>\n        </Form.Item>\n        <ButtonSave\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={loading}\n          disabled={_.isEmpty(fileList)}\n        />\n      </Form>\n    </ConfigProvider>\n  );\n};\n\nexport const UpdateModeleForm = ({ initialValues, onFinish, loading }) => {\n  const [fileList, setFileList] = useState(initialValues.imageFile);\n\n  const handleChange = ({ fileList }) => setFileList(fileList);\n\n  return (\n    <ConfigProvider form={{ validateMessages }}>\n      <Form\n        name=\"modele\"\n        onFinish={(values) => {\n          _.differenceWith(\n            initialValues.imageFile,\n            fileList,\n            (a: any, b: any) => a.uid === b.uid\n          ).map(({ uid }) => remove({ uid }));\n          onFinish({\n            ...values,\n            imageFile: fileList.map((file) =>\n              file.response ? file.response : file\n            ),\n          });\n        }}\n        initialValues={initialValues}\n        layout=\"vertical\"\n      >\n        <FormItemCanner label=\"Pour\" />\n        <FormItemTypeModele label=\"Type de modèle\" />\n        <FormItemName label=\"Nom \" />\n        <FormItemDescription label=\"Description\" />\n        <Form.Item>\n          <Upload\n            showUploadList={{ showPreviewIcon: false }}\n            listType=\"picture-card\"\n            action={`${process.env.REACT_APP_BASE_URL_API}/upload/photos`}\n            onChange={handleChange}\n            fileList={fileList}\n          >\n            <Button type=\"link\" icon={<UploadOutlined />}>\n              Photo\n            </Button>\n          </Upload>\n        </Form.Item>\n        <ButtonEdit type=\"primary\" htmlType=\"submit\" loading={loading} />\n      </Form>\n    </ConfigProvider>\n  );\n};\n\nexport const FormFilter = ({ onFinish }) => {\n  return (\n    <ConfigProvider form={{ validateMessages }}>\n      <Form name=\"filter\" onFinish={onFinish} layout=\"inline\" size=\"small\">\n        <FormItemCanner all />\n        <FormItemTypeModele noRule />\n        <ButtonFilter type=\"primary\" htmlType=\"submit\" />\n      </Form>\n    </ConfigProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}