{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/affix/style\";\nimport _Affix from \"antd/es/affix\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Galerie/Galerie.tsx\";\nimport React, { useState } from \"react\";\nimport { CustomerLayout } from \"../Shared/CustomerLayout\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { MODELES } from \"../../Gql/Query\";\nimport { Photos } from \"./Photos\";\nimport { Loading } from \"../Shared/Loading\";\nimport { FilterOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { FormFilter } from \"./Form\";\nexport const Galerie = () => {\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(MODELES);\n  const [values, setValues] = useState();\n  const [hide, toggle] = useState(true);\n\n  const onFinish = values => {\n    refetch({ ...values\n    });\n    setValues(values);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CustomerLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, !hide && /*#__PURE__*/React.createElement(_Affix, {\n    style: {\n      position: \"fixed\",\n      top: 120,\n      right: 30,\n      zIndex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    hoverable: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormFilter, {\n    initialValues: values,\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(_Affix, {\n    style: {\n      position: \"fixed\",\n      top: 80,\n      right: 30,\n      zIndex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    onClick: () => toggle(hide => !hide),\n    shape: \"round\",\n    type: hide ? \"primary\" : \"danger\",\n    icon: hide ? /*#__PURE__*/React.createElement(FilterOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }\n    }) : /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, hide ? \"Filtrer\" : \"Fermer\")), /*#__PURE__*/React.createElement(Photos, {\n    photos: data === null || data === void 0 ? void 0 : data.modeles.nodes.map(({\n      imageFile\n    }) => ({\n      src: imageFile[0].url,\n      height: 2,\n      width: 1\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/Galerie/Galerie.tsx"],"names":["React","useState","CustomerLayout","useQuery","MODELES","Photos","Loading","FilterOutlined","CloseCircleOutlined","FormFilter","Galerie","data","loading","refetch","values","setValues","hide","toggle","onFinish","position","top","right","zIndex","modeles","nodes","map","imageFile","src","url","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { CustomerLayout } from \"../Shared/CustomerLayout\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { MODELES } from \"../../Gql/Query\";\nimport { Photos } from \"./Photos\";\nimport { Loading } from \"../Shared/Loading\";\nimport { Affix, Button, Card } from \"antd\";\nimport { FilterOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { FormFilter } from \"./Form\";\n\nexport const Galerie = () => {\n  const { data, loading, refetch } = useQuery(MODELES);\n  const [values, setValues] = useState();\n  const [hide, toggle] = useState(true);\n\n  const onFinish = (values) => {\n    refetch({\n      ...values,\n    });\n    setValues(values);\n  };\n\n  if (loading) {\n    return <Loading />;\n  }\n  return (\n    <CustomerLayout>\n      {!hide && (\n        <Affix style={{ position: \"fixed\", top: 120, right: 30, zIndex: 2 }}>\n          <Card hoverable size=\"small\">\n            <FormFilter initialValues={values} onFinish={onFinish} />\n          </Card>\n        </Affix>\n      )}\n      <Affix style={{ position: \"fixed\", top: 80, right: 30, zIndex: 2 }}>\n        <Button\n          onClick={() => toggle((hide) => !hide)}\n          shape=\"round\"\n          type={hide ? \"primary\" : \"danger\"}\n          icon={hide ? <FilterOutlined /> : <CloseCircleOutlined />}\n        >\n          {hide ? \"Filtrer\" : \"Fermer\"}\n        </Button>\n      </Affix>\n      <Photos\n        photos={data?.modeles.nodes.map(({ imageFile }) => ({\n          src: imageFile[0].url,\n          height: 2,\n          width: 1,\n        }))}\n      />\n    </CustomerLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}