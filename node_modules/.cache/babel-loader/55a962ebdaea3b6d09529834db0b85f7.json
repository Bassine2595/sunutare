{"ast":null,"code":"import \"antd/es/affix/style\";\nimport _Affix from \"antd/es/affix\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/Index.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../Context\";\nimport { SERVICES } from \"../../../Gql/Query\";\nimport { Show } from \"./Show\";\nimport { Edit } from \"./Edit\";\nimport { useModal } from \"../../../hooks/useModal\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { ServiceResume } from \"./Display\";\nimport { Begin } from \"../Begin/Begin\";\nimport { Index as FollowModal } from \"../Follow/Follow\";\nimport { Index as DeliverModal } from \"../Deliver/Index\";\nimport { FilterForm, SearchService } from \"./Form\";\nimport { useMediaQuery } from \"react-responsive\";\nimport _ from \"lodash\";\nimport { ScissorOutlined, DeliveredProcedureOutlined } from \"@ant-design/icons\";\nexport const Index = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const init = {\n    workshopId: user.workshop.id,\n    isStarded: undefined,\n    isCut: undefined,\n    isOver: undefined,\n    isDelivered: undefined\n  };\n  const [service, setService] = useState(null);\n  const [beginModal, beginModalToggle] = useModal();\n  const [showModal, showModalToggle] = useModal();\n  const [editModal, editModalToggle] = useModal();\n  const [followModal, followModalToggle] = useModal();\n  const [deliverModal, deliverModalToggle] = useModal();\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(SERVICES, {\n    variables: init\n  });\n  const isMd = useMediaQuery({\n    query: \"(max-width: 768px)\"\n  });\n\n  const onChange = ({\n    target: {\n      value\n    }\n  }) => {\n    switch (value) {\n      case \"start\":\n        refetch({ ..._.omit(init, \"isStarded\"),\n          isStarded: true\n        });\n        break;\n\n      case \"cut\":\n        refetch({ ..._.omit(init, \"isCut\"),\n          isCut: true\n        });\n        break;\n\n      case \"over\":\n        refetch({ ..._.omit(init, \"isOver\"),\n          isOver: true\n        });\n        break;\n\n      case \"deliver\":\n        refetch({ ..._.omit(init, \"isDelivered\"),\n          isDelivered: true\n        });\n        break;\n\n      default:\n        refetch(init);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Begin, {\n    service: service,\n    visible: beginModal,\n    onSuccess: () => {\n      beginModalToggle();\n\n      _notification.success({\n        message: \"Service commencé avec succès !\"\n      });\n\n      refetch();\n    },\n    onError: () => {\n      _notification.error({\n        message: \"Une erreur est survenue réessayer plus tard !\"\n      });\n\n      beginModalToggle();\n    },\n    onCancel: beginModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Show, {\n    visible: showModal,\n    onCancel: showModalToggle,\n    serviceId: service === null || service === void 0 ? void 0 : service.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Edit, {\n    visible: editModal,\n    onCancel: editModalToggle,\n    service: service,\n    onSuccess: () => {\n      editModalToggle();\n\n      _notification.success({\n        message: \"Service modifié avec succès !\"\n      });\n\n      refetch();\n    },\n    onError: () => {\n      _notification.error({\n        message: \"Une erreur est survenue réessayer plus tard !\"\n      });\n\n      editModalToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FollowModal, {\n    onError: () => {\n      followModalToggle();\n\n      _notification.error({\n        message: \"Une erreur survenue réessayer plus tard !\"\n      });\n    },\n    visible: followModal,\n    onCancel: followModalToggle,\n    onSuccess: () => {\n      followModalToggle();\n\n      _notification.success({\n        message: \"Etape validée avec succès!\"\n      });\n\n      refetch();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DeliverModal, {\n    onError: () => {\n      deliverModalToggle();\n\n      _notification.error({\n        message: \"Une erreur survenue réessayer plus tard !\"\n      });\n    },\n    visible: deliverModal,\n    onCancel: deliverModalToggle,\n    onSuccess: () => {\n      deliverModalToggle();\n\n      _notification.success({\n        message: \"Service livrer avec succès !\"\n      });\n\n      refetch();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_Card, {\n    style: {\n      marginBottom: 20\n    },\n    title: \"Rechercher un service\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchService, {\n    onSearch: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterForm, {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, data && /*#__PURE__*/React.createElement(_List, {\n    grid: {\n      gutter: 16,\n      xs: 1,\n      sm: 2,\n      md: 2,\n      lg: 4\n    },\n    rowKey: \"id\",\n    loading: loading,\n    renderItem: data => /*#__PURE__*/React.createElement(_List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ServiceResume, Object.assign({}, data, {\n      onClickFollow: service => {\n        followModalToggle();\n        setService(service);\n      },\n      onClickShow: service => {\n        showModalToggle();\n        setService(service);\n      },\n      onClickBegin: service => {\n        beginModalToggle();\n        setService(service);\n      },\n      onClickEdit: service => {\n        editModalToggle();\n        setService(service);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }))),\n    dataSource: data.services.nodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(_Affix, {\n    style: {\n      position: \"fixed\",\n      bottom: 100,\n      right: 30,\n      zIndex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    onClick: followModalToggle,\n    shape: \"round\",\n    type: \"primary\",\n    icon: /*#__PURE__*/React.createElement(ScissorOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, !isMd && \"Je suis un service\")), /*#__PURE__*/React.createElement(_Affix, {\n    style: {\n      position: \"fixed\",\n      bottom: 60,\n      right: 30,\n      zIndex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    onClick: deliverModalToggle,\n    shape: \"round\",\n    type: \"primary\",\n    icon: /*#__PURE__*/React.createElement(DeliveredProcedureOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, !isMd && \"Je livre un service\")));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Service/Index.tsx"],"names":["React","useContext","useState","useQuery","UserContext","SERVICES","Show","Edit","useModal","Theme","ServiceResume","Begin","Index","FollowModal","DeliverModal","FilterForm","SearchService","useMediaQuery","_","ScissorOutlined","DeliveredProcedureOutlined","user","init","workshopId","workshop","id","isStarded","undefined","isCut","isOver","isDelivered","service","setService","beginModal","beginModalToggle","showModal","showModalToggle","editModal","editModalToggle","followModal","followModalToggle","deliverModal","deliverModalToggle","data","loading","refetch","variables","isMd","query","onChange","target","value","omit","success","message","error","marginBottom","gutter","xs","sm","md","lg","services","nodes","position","bottom","right","zIndex"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Row, Col, Card, List, notification, Affix, Button } from \"antd\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../Context\";\nimport { SERVICES } from \"../../../Gql/Query\";\nimport { Show } from \"./Show\";\nimport { Edit } from \"./Edit\";\nimport { useModal } from \"../../../hooks/useModal\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { ServiceResume } from \"./Display\";\nimport { Begin } from \"../Begin/Begin\";\nimport { Index as FollowModal } from \"../Follow/Follow\";\nimport { Index as DeliverModal } from \"../Deliver/Index\";\nimport { FilterForm, SearchService } from \"./Form\";\nimport { useMediaQuery } from \"react-responsive\";\nimport _ from \"lodash\";\nimport { ScissorOutlined, DeliveredProcedureOutlined } from \"@ant-design/icons\";\n\nexport const Index = () => {\n  const { user } = useContext(UserContext);\n  const init = {\n    workshopId: user.workshop.id,\n    isStarded: undefined,\n    isCut: undefined,\n    isOver: undefined,\n    isDelivered: undefined,\n  };\n  const [service, setService] = useState(null);\n  const [beginModal, beginModalToggle] = useModal();\n  const [showModal, showModalToggle] = useModal();\n  const [editModal, editModalToggle] = useModal();\n  const [followModal, followModalToggle] = useModal();\n  const [deliverModal, deliverModalToggle] = useModal();\n  const { data, loading, refetch } = useQuery(SERVICES, {\n    variables: init,\n  });\n  const isMd = useMediaQuery({ query: \"(max-width: 768px)\" });\n\n  const onChange = ({ target: { value } }) => {\n    switch (value) {\n      case \"start\":\n        refetch({ ..._.omit(init, \"isStarded\"), isStarded: true });\n        break;\n      case \"cut\":\n        refetch({ ..._.omit(init, \"isCut\"), isCut: true });\n        break;\n      case \"over\":\n        refetch({ ..._.omit(init, \"isOver\"), isOver: true });\n        break;\n      case \"deliver\":\n        refetch({ ..._.omit(init, \"isDelivered\"), isDelivered: true });\n        break;\n      default:\n        refetch(init);\n        break;\n    }\n  };\n\n  return (\n    <Theme>\n      <Begin\n        service={service}\n        visible={beginModal}\n        onSuccess={() => {\n          beginModalToggle();\n          notification.success({ message: \"Service commencé avec succès !\" });\n          refetch();\n        }}\n        onError={() => {\n          notification.error({\n            message: \"Une erreur est survenue réessayer plus tard !\",\n          });\n          beginModalToggle();\n        }}\n        onCancel={beginModalToggle}\n      />\n      <Show\n        visible={showModal}\n        onCancel={showModalToggle}\n        serviceId={service?.id}\n      />\n      <Edit\n        visible={editModal}\n        onCancel={editModalToggle}\n        service={service}\n        onSuccess={() => {\n          editModalToggle();\n          notification.success({ message: \"Service modifié avec succès !\" });\n          refetch();\n        }}\n        onError={() => {\n          notification.error({\n            message: \"Une erreur est survenue réessayer plus tard !\",\n          });\n          editModalToggle();\n        }}\n      />\n      <FollowModal\n        onError={() => {\n          followModalToggle();\n          notification.error({\n            message: \"Une erreur survenue réessayer plus tard !\",\n          });\n        }}\n        visible={followModal}\n        onCancel={followModalToggle}\n        onSuccess={() => {\n          followModalToggle();\n          notification.success({ message: \"Etape validée avec succès!\" });\n          refetch();\n        }}\n      />\n      <DeliverModal\n        onError={() => {\n          deliverModalToggle();\n          notification.error({\n            message: \"Une erreur survenue réessayer plus tard !\",\n          });\n        }}\n        visible={deliverModal}\n        onCancel={deliverModalToggle}\n        onSuccess={() => {\n          deliverModalToggle();\n          notification.success({ message: \"Service livrer avec succès !\" });\n          refetch();\n        }}\n      />\n      <Card style={{ marginBottom: 20 }} title=\"Rechercher un service\">\n        <SearchService onSearch={onChange} />\n        <FilterForm onChange={onChange} />\n      </Card>\n\n      <Row>\n        <Col span={24}>\n          {data && (\n            <List\n              grid={{ gutter: 16, xs: 1, sm: 2, md: 2, lg: 4 }}\n              rowKey=\"id\"\n              loading={loading}\n              renderItem={(data) => (\n                <List.Item>\n                  <ServiceResume\n                    {...data}\n                    onClickFollow={(service) => {\n                      followModalToggle();\n                      setService(service);\n                    }}\n                    onClickShow={(service) => {\n                      showModalToggle();\n                      setService(service);\n                    }}\n                    onClickBegin={(service) => {\n                      beginModalToggle();\n                      setService(service);\n                    }}\n                    onClickEdit={(service) => {\n                      editModalToggle();\n                      setService(service);\n                    }}\n                  />\n                </List.Item>\n              )}\n              dataSource={data.services.nodes}\n            />\n          )}\n        </Col>\n      </Row>\n      <Affix style={{ position: \"fixed\", bottom: 100, right: 30, zIndex: 2 }}>\n        <Button\n          onClick={followModalToggle}\n          shape=\"round\"\n          type=\"primary\"\n          icon={<ScissorOutlined />}\n        >\n          {!isMd && \"Je suis un service\"}\n        </Button>\n      </Affix>\n      <Affix style={{ position: \"fixed\", bottom: 60, right: 30, zIndex: 2 }}>\n        <Button\n          onClick={deliverModalToggle}\n          shape=\"round\"\n          type=\"primary\"\n          icon={<DeliveredProcedureOutlined />}\n        >\n          {!isMd && \"Je livre un service\"}\n        </Button>\n      </Affix>\n    </Theme>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}