{"ast":null,"code":"var _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Customer.tsx\";\nimport React, { useContext } from \"react\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { UserContext } from \"../../Context\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { EMPLOYERSBYWORKSHOPID } from \"../../../Gql/Query\";\nexport const Customer = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(EMPLOYERSBYWORKSHOPID, {\n    variables: {\n      workshopId: user.workshop.id\n    }\n  });\n  return /*#__PURE__*/React.createElement(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Customer.tsx"],"names":["React","useContext","Theme","UserContext","useQuery","EMPLOYERSBYWORKSHOPID","Customer","user","data","loading","refetch","variables","workshopId","workshop","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAA4C,OAA5C;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAWN,UAAU,CAACE,WAAD,CAA3B;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BN,QAAQ,CAACC,qBAAD,EAAwB;AACjEM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAEL,IAAI,CAACM,QAAL,CAAcC;AAA5B;AADsD,GAAxB,CAA3C;AAMA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAbM","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { Row, Col, PageHeader, message, List, Button, Skeleton } from \"antd\";\nimport { UserContext } from \"../../Context\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { EMPLOYERSBYWORKSHOPID } from \"../../../Gql/Query\";\n\n\nexport const Customer = () => {\n  const { user } = useContext(UserContext);\n  const { data, loading, refetch } = useQuery(EMPLOYERSBYWORKSHOPID, {\n    variables: { workshopId: user.workshop.id },\n  });\n \n\n  \n  return (\n    <Theme>\n      \n    </Theme>\n  );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}