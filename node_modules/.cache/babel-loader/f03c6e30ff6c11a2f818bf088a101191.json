{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/ForgetPassword/PasswordReset.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { UserLayout } from \"../Shared/UserLayout\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { PasswordForm } from \"./Form\";\nimport { CURRENTUSERID } from \"../../Gql/Query\";\nimport { UPDATEPASSWORD } from \"../../Gql/Mutation\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { TokenInvalid } from \"../FeedBack/Result\";\nimport Client from \"../../Client\";\nexport const PasswordReset = () => {\n  const {\n    token\n  } = useParams();\n  const [id, setId] = useState(null);\n  const [valid, setValid] = useState(true);\n  const history = useHistory();\n  const [updatePassword, {\n    loading\n  }] = useMutation(UPDATEPASSWORD);\n  useEffect(() => {\n    Client({\n      token\n    }).query({\n      query: CURRENTUSERID\n    }).then(({\n      data: {\n        currentUser\n      }\n    }) => {\n      setId(currentUser.id);\n    }).catch(() => setValid(true));\n  });\n\n  const onFinish = ({\n    password\n  }) => {\n    updatePassword({\n      variables: {\n        id,\n        password\n      }\n    }).then(() => {\n      history.push(\"/login\");\n    });\n  };\n\n  if (!valid) {\n    return /*#__PURE__*/React.createElement(TokenInvalid, {\n      onClickSendBack: () => {\n        history.push(\"/forget-password\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(UserLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    md: 16,\n    lg: 10,\n    xl: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    hoverable: true,\n    style: {\n      borderRadius: 8\n    },\n    title: \"Saisisser votre nouveau mot de passe !\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PasswordForm, {\n    onFinish: onFinish,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/ForgetPassword/PasswordReset.tsx"],"names":["React","useEffect","useState","UserLayout","useParams","useHistory","PasswordForm","CURRENTUSERID","UPDATEPASSWORD","useMutation","TokenInvalid","Client","PasswordReset","token","id","setId","valid","setValid","history","updatePassword","loading","query","then","data","currentUser","catch","onFinish","password","variables","push","borderRadius"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYT,SAAS,EAA3B;AACA,QAAM,CAACU,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMgB,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM,CAACc,cAAD,EAAiB;AAAEC,IAAAA;AAAF,GAAjB,IAAgCX,WAAW,CAACD,cAAD,CAAjD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CAAC;AAAEE,MAAAA;AAAF,KAAD,CAAN,CACGQ,KADH,CACS;AAAEA,MAAAA,KAAK,EAAEd;AAAT,KADT,EAEGe,IAFH,CAEQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,KAAD,KAA+B;AACnCT,MAAAA,KAAK,CAACS,WAAW,CAACV,EAAb,CAAL;AACD,KAJH,EAKGW,KALH,CAKS,MAAMR,QAAQ,CAAC,IAAD,CALvB;AAMD,GAPQ,CAAT;;AAQA,QAAMS,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACjCR,IAAAA,cAAc,CAAC;AAAES,MAAAA,SAAS,EAAE;AAAEd,QAAAA,EAAF;AAAMa,QAAAA;AAAN;AAAb,KAAD,CAAd,CAAgDL,IAAhD,CAAqD,MAAM;AACzDJ,MAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACD,KAFD;AAGD,GAJD;;AAMA,MAAI,CAACb,KAAL,EAAY;AACV,wBACE,oBAAC,YAAD;AACE,MAAA,eAAe,EAAE,MAAM;AACrBE,QAAAA,OAAO,CAACW,IAAR,CAAa,kBAAb;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AACD,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAFT;AAGE,IAAA,KAAK,EAAC,wCAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEJ,QAAxB;AAAkC,IAAA,OAAO,EAAEN,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,CADF,CADF;AAeD,CA7CM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { UserLayout } from \"../Shared/UserLayout\";\nimport { Card, Col, Row } from \"antd\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { PasswordForm } from \"./Form\";\nimport { CURRENTUSERID } from \"../../Gql/Query\";\nimport { UPDATEPASSWORD } from \"../../Gql/Mutation\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { TokenInvalid } from \"../FeedBack/Result\";\nimport Client from \"../../Client\";\n\nexport const PasswordReset = () => {\n  const { token } = useParams();\n  const [id, setId] = useState(null);\n  const [valid, setValid] = useState(true);\n  const history = useHistory();\n  const [updatePassword, { loading }] = useMutation(UPDATEPASSWORD);\n\n  useEffect(() => {\n    Client({ token })\n      .query({ query: CURRENTUSERID })\n      .then(({ data: { currentUser } }) => {\n        setId(currentUser.id);\n      })\n      .catch(() => setValid(true));\n  });\n  const onFinish = ({ password }) => {\n    updatePassword({ variables: { id, password } }).then(() => {\n      history.push(\"/login\");\n    });\n  };\n\n  if (!valid) {\n    return (\n      <TokenInvalid\n        onClickSendBack={() => {\n          history.push(\"/forget-password\");\n        }}\n      />\n    );\n  }\n  return (\n    <UserLayout>\n      <Row justify=\"center\">\n        <Col xs={24} md={16} lg={10} xl={8}>\n          <Card\n            hoverable\n            style={{ borderRadius: 8 }}\n            title=\"Saisisser votre nouveau mot de passe !\"\n          >\n            <PasswordForm onFinish={onFinish} loading={loading} />\n          </Card>\n        </Col>\n      </Row>\n    </UserLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}