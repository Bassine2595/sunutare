{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/skeleton/style\";\nimport _Skeleton from \"antd/es/skeleton\";\nimport \"antd/es/page-header/style\";\nimport _PageHeader from \"antd/es/page-header\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Employer/Employer.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { UserContext } from \"../../Context\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Add } from \"./Add\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { EMPLOYERSBYWORKSHOPID } from \"../../../Gql/Query\";\nimport { useModal } from \"../../../hooks/useModal\";\nimport { Show } from \"./Show\";\nimport { Make } from \"./Make\";\nimport { Display } from \"./Display\";\nimport { EditEmployer } from \"./Update\";\n\nconst Employer = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(EMPLOYERSBYWORKSHOPID, {\n    variables: {\n      workshopId: user.workshop.id\n    }\n  });\n  const [employer, setEmployer] = useState();\n  const [addModal, addModalToggle] = useModal();\n  const [showModal, showModalToggle] = useModal();\n  const [makeModal, makeModalToggle] = useModal();\n  const [editModal, editModalToggle] = useModal();\n\n  const onClickShow = employer => {\n    setEmployer(employer);\n    showModalToggle();\n  };\n\n  const onClickMake = employer => {\n    setEmployer(employer);\n    makeModalToggle();\n  };\n\n  const onClickEdit = employer => {\n    setEmployer(employer);\n    editModalToggle();\n  };\n\n  return /*#__PURE__*/React.createElement(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    visible: addModal,\n    onSuccess: () => {\n      addModalToggle();\n\n      _message.success(\"Employé ajouté avec succès !\");\n\n      refetch();\n    },\n    onError: e => {\n      console.log(e);\n      addModalToggle();\n\n      _message.error(\"Une erreur est survenue, réessayer plus tard !\");\n    },\n    onCancel: addModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), employer && /*#__PURE__*/React.createElement(Show, {\n    visible: showModal,\n    onCancel: showModalToggle,\n    employer: employer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), employer && /*#__PURE__*/React.createElement(Make, {\n    visible: makeModal,\n    onCancel: makeModalToggle,\n    employer: employer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), employer && /*#__PURE__*/React.createElement(EditEmployer, {\n    employer: employer,\n    visible: editModal,\n    onCancel: editModalToggle,\n    onSuccess: () => {\n      editModalToggle();\n\n      _message.success(\"Les informations de l'employé ont été modifié !\");\n\n      refetch();\n    },\n    onError: () => {\n      editModalToggle();\n\n      _message.error(\"Une erreur est survenue, réessayer plus tard !\");\n\n      refetch();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_PageHeader, {\n    style: {\n      marginBottom: 20\n    },\n    ghost: false,\n    title: \"Employ\\xE9s\",\n    onBack: () => window.history.back(),\n    extra: /*#__PURE__*/React.createElement(_Button, {\n      onClick: addModalToggle,\n      type: \"primary\",\n      shape: \"round\",\n      key: \"add\",\n      icon: /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Ajouter un employ\\xE9\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), loading ? /*#__PURE__*/React.createElement(_Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(_List, {\n    rowKey: \"id\",\n    grid: {\n      gutter: 8,\n      xs: 1,\n      sm: 1,\n      md: 1,\n      lg: 2,\n      xl: 3\n    },\n    dataSource: data === null || data === void 0 ? void 0 : data.employers.nodes,\n    renderItem: (employer, key) => {\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Display, Object.assign({}, employer, {\n        onClickEdit: onClickEdit,\n        onClickMake: onClickMake,\n        onClickShow: onClickShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Employer;","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Employer/Employer.tsx"],"names":["React","useContext","useState","Theme","UserContext","PlusCircleOutlined","Add","useQuery","EMPLOYERSBYWORKSHOPID","useModal","Show","Make","Display","EditEmployer","Employer","user","data","loading","refetch","variables","workshopId","workshop","id","employer","setEmployer","addModal","addModalToggle","showModal","showModalToggle","makeModal","makeModalToggle","editModal","editModalToggle","onClickShow","onClickMake","onClickEdit","success","e","console","log","error","marginBottom","window","history","back","gutter","xs","sm","md","lg","xl","employers","nodes","key"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { Row, Col, PageHeader, message, List, Button, Skeleton } from \"antd\";\nimport { UserContext } from \"../../Context\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Add } from \"./Add\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { EMPLOYERSBYWORKSHOPID } from \"../../../Gql/Query\";\nimport { useModal } from \"../../../hooks/useModal\";\nimport { Show } from \"./Show\";\nimport { Make } from \"./Make\";\nimport { Display } from \"./Display\";\nimport { EditEmployer } from \"./Update\";\n\nconst Employer = () => {\n  const { user } = useContext(UserContext);\n  const { data, loading, refetch } = useQuery(EMPLOYERSBYWORKSHOPID, {\n    variables: { workshopId: user.workshop.id },\n  });\n  const [employer, setEmployer] = useState();\n  const [addModal, addModalToggle] = useModal();\n  const [showModal, showModalToggle] = useModal();\n  const [makeModal, makeModalToggle] = useModal();\n  const [editModal, editModalToggle] = useModal();\n\n  const onClickShow = (employer) => {\n    setEmployer(employer);\n    showModalToggle();\n  };\n\n  const onClickMake = (employer) => {\n    setEmployer(employer);\n    makeModalToggle();\n  };\n  const onClickEdit = (employer) => {\n    setEmployer(employer);\n    editModalToggle();\n  };\n\n  return (\n    <Theme>\n      <Add\n        visible={addModal}\n        onSuccess={() => {\n          addModalToggle();\n          message.success(\"Employé ajouté avec succès !\");\n          refetch();\n        }}\n        onError={(e) => {\n          console.log(e);\n          addModalToggle();\n          message.error(\"Une erreur est survenue, réessayer plus tard !\");\n        }}\n        onCancel={addModalToggle}\n      />\n      {employer && (\n        <Show\n          visible={showModal}\n          onCancel={showModalToggle}\n          employer={employer}\n        />\n      )}\n      {employer && (\n        <Make\n          visible={makeModal}\n          onCancel={makeModalToggle}\n          employer={employer}\n        />\n      )}\n      {employer && (\n        <EditEmployer\n          employer={employer}\n          visible={editModal}\n          onCancel={editModalToggle}\n          onSuccess={() => {\n            editModalToggle();\n            message.success(\"Les informations de l'employé ont été modifié !\");\n            refetch();\n          }}\n          onError={() => {\n            editModalToggle();\n            message.error(\"Une erreur est survenue, réessayer plus tard !\");\n            refetch();\n          }}\n        />\n      )}\n      <Row gutter={[12, 12]}>\n        <Col span={24}>\n          <PageHeader\n            style={{ marginBottom: 20 }}\n            ghost={false}\n            title=\"Employés\"\n            onBack={() => window.history.back()}\n            extra={\n              <Button\n                onClick={addModalToggle}\n                type=\"primary\"\n                shape=\"round\"\n                key=\"add\"\n                icon={<PlusCircleOutlined />}\n              >\n                Ajouter un employé\n              </Button>\n            }\n          />\n          {loading ? (\n            <Skeleton />\n          ) : (\n            <List\n              rowKey=\"id\"\n              grid={{ gutter: 8, xs: 1, sm: 1, md: 1, lg: 2, xl: 3 }}\n              dataSource={data?.employers.nodes}\n              renderItem={(employer: any, key) => {\n                return (\n                  <List.Item key={key}>\n                    <Display\n                      {...employer}\n                      onClickEdit={onClickEdit}\n                      onClickMake={onClickMake}\n                      onClickShow={onClickShow}\n                    />\n                  </List.Item>\n                );\n              }}\n            />\n          )}\n        </Col>\n      </Row>\n    </Theme>\n  );\n};\n\nexport default Employer;\n"]},"metadata":{},"sourceType":"module"}