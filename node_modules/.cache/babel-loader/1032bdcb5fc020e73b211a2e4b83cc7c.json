{"ast":null,"code":"import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Customer.tsx\";\nimport React, { useContext } from \"react\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { UserContext } from \"../../Context\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CUSTOMERSBYWORKSHOPID } from \"../../../Gql/Query\";\nimport { Display } from \"./Display\";\nimport { FilterForm } from \"../Service/Form\";\nexport const Customer = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(CUSTOMERSBYWORKSHOPID, {\n    variables: {\n      workshopId: user.workshop.id,\n      all: true\n    }\n  });\n  if (data) console.log(data);\n  return /*#__PURE__*/React.createElement(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    style: {\n      marginBottom: 20\n    },\n    title: \"Filtrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(FilterForm, {\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_List, {\n    rowKey: \"id\",\n    grid: {\n      gutter: 8,\n      xs: 1,\n      sm: 1,\n      md: 1,\n      lg: 2,\n      xl: 3\n    },\n    dataSource: data === null || data === void 0 ? void 0 : data.customers.nodes,\n    renderItem: (customer, key) => {\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Display, Object.assign({}, customer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }\n  }));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Customer/Customer.tsx"],"names":["React","useContext","Theme","UserContext","useQuery","CUSTOMERSBYWORKSHOPID","Display","FilterForm","Customer","user","data","loading","refetch","variables","workshopId","workshop","id","all","console","log","marginBottom","gutter","xs","sm","md","lg","xl","customers","nodes","customer","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAA4C,OAA5C;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAWR,UAAU,CAACE,WAAD,CAA3B;AACA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BR,QAAQ,CAACC,qBAAD,EAAwB;AACjEQ,IAAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAEL,IAAI,CAACM,QAAL,CAAcC,EAA5B;AAAgCC,MAAAA,GAAG,EAAC;AAApC;AADsD,GAAxB,CAA3C;AAIA,MAAGP,IAAH,EACEQ,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEF,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADL,eAIG;AACO,IAAA,MAAM,EAAC,IADd;AAEO,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE,CAAxB;AAA2BC,MAAAA,EAAE,EAAE,CAA/B;AAAkCC,MAAAA,EAAE,EAAE,CAAtC;AAAyCC,MAAAA,EAAE,EAAE;AAA7C,KAFb;AAGO,IAAA,UAAU,EAAEhB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEiB,SAAN,CAAgBC,KAHnC;AAIO,IAAA,UAAU,EAAE,CAACC,QAAD,EAAeC,GAAf,KAAuB;AACjC,0BACE,0BAAM,IAAN;AAAW,QAAA,GAAG,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD,oBACQD,QADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAOD,KAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,CADF;AAqBD,CA9BM","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Theme } from \"../../Shared/Layout\";\nimport { Row, Col, PageHeader, message, List, Button, Skeleton, Card } from \"antd\";\nimport { UserContext } from \"../../Context\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CUSTOMERSBYWORKSHOPID } from \"../../../Gql/Query\";\nimport { Display } from \"./Display\";\nimport { FilterForm } from \"../Service/Form\";\n\n\nexport const Customer = () => {\n  const { user } = useContext(UserContext);\n  const { data, loading, refetch } = useQuery(CUSTOMERSBYWORKSHOPID, {\n    variables: { workshopId: user.workshop.id, all:true },\n  });\n \n  if(data)\n    console.log(data)\n  \n  return (\n    <Theme>\n         <Card style={{ marginBottom: 20 }} title=\"Filtrer\">\n        <FilterForm onChange=\"\" />\n      </Card>\n       <List\n              rowKey=\"id\"\n              grid={{ gutter: 8, xs: 1, sm: 1, md: 1, lg: 2, xl: 3 }}\n              dataSource={data?.customers.nodes}\n              renderItem={(customer:any, key) => {\n                return (\n                  <List.Item key={key}>\n                    <Display\n                        {...customer}\n                    />\n                  </List.Item>\n                );\n              }}\n            />\n    </Theme>\n  );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}