{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/alert/style\";\nimport _Alert from \"antd/es/alert\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Begin/Begin.tsx\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATESERVICE, MATCHSERVICEEMPLOYER } from \"../../../Gql/Mutation\";\nimport { BeginForm } from \"./Form\";\nimport { ServiceResume } from \"../Service/Display\";\nexport const Begin = ({\n  service,\n  visible,\n  onSuccess,\n  onError,\n  onCancel\n}) => {\n  const [editService, {\n    loading\n  }] = useMutation(UPDATESERVICE);\n  const [matchServiceEmployer] = useMutation(MATCHSERVICEEMPLOYER);\n  const [hide, setHide] = useState(true);\n\n  const onFinish = ({\n    codeEmployer\n  }) => {\n    matchServiceEmployer({\n      variables: {\n        codeService: service.code,\n        codeEmployer: parseInt(codeEmployer)\n      }\n    }).then(({\n      data: {\n        matchServiceEmployer\n      }\n    }) => {\n      console.log(matchServiceEmployer);\n\n      if (!matchServiceEmployer.match) {\n        setHide(false);\n      } else {\n        editService({\n          variables: {\n            id: service.id,\n            patch: {\n              isStarded: true\n            }\n          }\n        }).then(({\n          data\n        }) => {\n          onSuccess(data);\n        }).catch(error => onError(error));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(_Modal, {\n    visible: visible,\n    footer: null,\n    onCancel: onCancel,\n    width: 300,\n    bodyStyle: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ServiceResume, Object.assign({}, service, {\n    noExtra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), !hide && /*#__PURE__*/React.createElement(_Alert, {\n    message: \"Non autoris\\xE9 !\",\n    showIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(BeginForm, {\n    onFinish: onFinish,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Begin/Begin.tsx"],"names":["React","useState","useMutation","UPDATESERVICE","MATCHSERVICEEMPLOYER","BeginForm","ServiceResume","Begin","service","visible","onSuccess","onError","onCancel","editService","loading","matchServiceEmployer","hide","setHide","onFinish","codeEmployer","variables","codeService","code","parseInt","then","data","console","log","match","id","patch","isStarded","catch","error","margin"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,uBAApD;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAGA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA,OAA/B;AAAwCC,EAAAA;AAAxC,CAAD,KAAwD;AAC3E,QAAM,CAACC,WAAD,EAAc;AAAEC,IAAAA;AAAF,GAAd,IAA6BZ,WAAW,CAACC,aAAD,CAA9C;AACA,QAAM,CAACY,oBAAD,IAAyBb,WAAW,CAACE,oBAAD,CAA1C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMiB,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAsB;AACrCJ,IAAAA,oBAAoB,CAAC;AACnBK,MAAAA,SAAS,EAAE;AACTC,QAAAA,WAAW,EAAEb,OAAO,CAACc,IADZ;AAETH,QAAAA,YAAY,EAAEI,QAAQ,CAACJ,YAAD;AAFb;AADQ,KAAD,CAApB,CAKGK,IALH,CAKQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEV,QAAAA;AAAF;AAAR,KAAD,KAAwC;AAC9CW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,oBAAZ;;AACA,UAAI,CAACA,oBAAoB,CAACa,KAA1B,EAAiC;AAC/BX,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OAFD,MAEO;AACLJ,QAAAA,WAAW,CAAC;AACVO,UAAAA,SAAS,EAAE;AAAES,YAAAA,EAAE,EAAErB,OAAO,CAACqB,EAAd;AAAkBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb;AAAzB;AADD,SAAD,CAAX,CAGGP,IAHH,CAGQ,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAc;AAClBf,UAAAA,SAAS,CAACe,IAAD,CAAT;AACD,SALH,EAMGO,KANH,CAMUC,KAAD,IAAWtB,OAAO,CAACsB,KAAD,CAN3B;AAOD;AACF,KAlBD;AAmBD,GApBD;;AAsBA,sBACE;AACE,IAAA,OAAO,EAAExB,OADX;AAEE,IAAA,MAAM,EAAE,IAFV;AAGE,IAAA,QAAQ,EAAEG,QAHZ;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,SAAS,EAAE;AAAEsB,MAAAA,MAAM,EAAE;AAAV,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD,oBAAmB1B,OAAnB;AAA4B,IAAA,OAAO,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEG,CAACQ,IAAD,iBAAS;AAAO,IAAA,OAAO,EAAC,mBAAf;AAAgC,IAAA,QAAQ,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFZ,eAGE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEE,QAArB;AAA+B,IAAA,OAAO,EAAEJ,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAPF,CADF;AAeD,CAzCM","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATESERVICE, MATCHSERVICEEMPLOYER } from \"../../../Gql/Mutation\";\nimport { BeginForm } from \"./Form\";\nimport { ServiceResume } from \"../Service/Display\";\nimport { Modal, Alert, Space } from \"antd\";\n\nexport const Begin = ({ service, visible, onSuccess, onError, onCancel }) => {\n  const [editService, { loading }] = useMutation(UPDATESERVICE);\n  const [matchServiceEmployer] = useMutation(MATCHSERVICEEMPLOYER);\n  const [hide, setHide] = useState(true);\n  const onFinish = ({ codeEmployer }) => {\n    matchServiceEmployer({\n      variables: {\n        codeService: service.code,\n        codeEmployer: parseInt(codeEmployer),\n      },\n    }).then(({ data: { matchServiceEmployer } }) => {\n      console.log(matchServiceEmployer);\n      if (!matchServiceEmployer.match) {\n        setHide(false);\n      } else {\n        editService({\n          variables: { id: service.id, patch: { isStarded: true } },\n        })\n          .then(({ data }) => {\n            onSuccess(data);\n          })\n          .catch((error) => onError(error));\n      }\n    });\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      footer={null}\n      onCancel={onCancel}\n      width={300}\n      bodyStyle={{ margin: 20 }}\n    >\n      <Space direction=\"vertical\">\n        <ServiceResume {...service} noExtra />\n        {!hide && <Alert message=\"Non autorisÃ© !\" showIcon />}\n        <BeginForm onFinish={onFinish} loading={loading} />\n      </Space>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}