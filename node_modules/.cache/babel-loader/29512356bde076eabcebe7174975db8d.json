{"ast":null,"code":"var _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/CheckUser.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CURRENTUSER } from \"../Gql/Query\";\nimport { Error500 } from \"./FeedBack/Result\";\nimport { UserContext } from \"./Context\";\nimport { Loading } from \"./Shared/Loading\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { Auth } from \"../Service\";\nexport const CheckUser = ({\n  children\n}) => {\n  const {\n    loading,\n    data,\n    error,\n    refetch\n  } = useQuery(CURRENTUSER);\n  const history = useHistory();\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(Error500, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (data && !data.currentUser) {\n    Auth.clear(() => {\n      history.push(\"/login\");\n    });\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (data && data.currentUser && !data.currentUser.isActive) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/activate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user: data.currentUser,\n      refetch: refetch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/CheckUser.tsx"],"names":["React","useQuery","CURRENTUSER","Error500","UserContext","Loading","Redirect","useHistory","Auth","CheckUser","children","loading","data","error","refetch","history","currentUser","clear","push","isActive","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,IAAT,QAAqB,YAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAoCb,QAAQ,CAACC,WAAD,CAAlD;AACA,QAAMa,OAAO,GAAGR,UAAU,EAA1B;;AAEA,MAAII,OAAJ,EAAa;AACX,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,KAAJ,EAAW;AACT,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAID,IAAI,IAAI,CAACA,IAAI,CAACI,WAAlB,EAA+B;AAC7BR,IAAAA,IAAI,CAACS,KAAL,CAAW,MAAM;AACfF,MAAAA,OAAO,CAACG,IAAR,CAAa,QAAb;AACD,KAFD;AAGA,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIN,IAAI,IAAIA,IAAI,CAACI,WAAb,IAA4B,CAACJ,IAAI,CAACI,WAAL,CAAiBG,QAAlD,EAA4D;AAC1D,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAER,IAAI,CAACI,WAAb;AAA0BF,MAAAA,OAAO,EAAEA;AAAnC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CA5BM","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CURRENTUSER } from \"../Gql/Query\";\nimport { Error500 } from \"./FeedBack/Result\";\nimport { UserContext } from \"./Context\";\nimport { Loading } from \"./Shared/Loading\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { Auth } from \"../Service\";\n\nexport const CheckUser = ({ children }) => {\n  const { loading, data, error, refetch } = useQuery(CURRENTUSER);\n  const history = useHistory();\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (error) {\n    return <Error500 />;\n  }\n\n  if (data && !data.currentUser) {\n    Auth.clear(() => {\n      history.push(\"/login\");\n    });\n    return <Loading />;\n  }\n\n  if (data && data.currentUser && !data.currentUser.isActive) {\n    return <Redirect to=\"/activate\" />;\n  }\n\n  return (\n    <UserContext.Provider value={{ user: data.currentUser, refetch: refetch }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}