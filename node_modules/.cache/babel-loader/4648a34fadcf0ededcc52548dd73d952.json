{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/alert/style\";\nimport _Alert from \"antd/es/alert\";\nvar _jsxFileName = \"/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Employer/Add.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { EmployerForm } from \"./Form\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATEEMPLOYER, EMPLOYEREXIST } from \"../../../Gql/Mutation\";\nimport { UserContext } from \"../../Context\";\nexport const Add = ({\n  visible,\n  onCancel,\n  onSuccess,\n  onError\n}) => {\n  const {\n    user\n  } = useContext(UserContext);\n  const [hide, toggle] = useState(true);\n  const [employerExist, employerExistOptions] = useMutation(EMPLOYEREXIST);\n  const [createEmployer, createEmployerOptions] = useMutation(CREATEEMPLOYER);\n\n  const onFinish = values => {\n    const {\n      phone,\n      mail\n    } = values;\n    employerExist({\n      variables: {\n        phone,\n        mail\n      }\n    }).then(({\n      data: {\n        employerExist\n      }\n    }) => {\n      if (employerExist.exist) {\n        toggle(hide => !hide);\n      } else {\n        createEmployer({\n          variables: {\n            input: { ...values,\n              workshopId: user.workshop.id\n            }\n          }\n        }).then(data => {\n          onSuccess(data);\n        }).catch(error => {\n          onError(error);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(_Modal, {\n    footer: null,\n    visible: visible,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, !hide && /*#__PURE__*/React.createElement(_Alert, {\n    message: \"Le numero de t\\xE9l\\xE9phone ou le mail est deja utilis\\xE9 !\",\n    showIcon: true,\n    type: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EmployerForm, {\n    loading: createEmployerOptions.loading || employerExistOptions.loading,\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/bassine/Documents/ProjetSunutare/frontend-manager/src/component/User/Employer/Add.tsx"],"names":["React","useContext","useState","EmployerForm","useMutation","CREATEEMPLOYER","EMPLOYEREXIST","UserContext","Add","visible","onCancel","onSuccess","onError","user","hide","toggle","employerExist","employerExistOptions","createEmployer","createEmployerOptions","onFinish","values","phone","mail","variables","then","data","exist","input","workshopId","workshop","id","catch","error","loading"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,uBAA9C;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,SAArB;AAAgCC,EAAAA;AAAhC,CAAD,KAA+C;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAAWZ,UAAU,CAACM,WAAD,CAA3B;AACA,QAAM,CAACO,IAAD,EAAOC,MAAP,IAAiBb,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAM,CAACc,aAAD,EAAgBC,oBAAhB,IAAwCb,WAAW,CAACE,aAAD,CAAzD;AACA,QAAM,CAACY,cAAD,EAAiBC,qBAAjB,IAA0Cf,WAAW,CAACC,cAAD,CAA3D;;AAEA,QAAMe,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,MAAxB;AACAL,IAAAA,aAAa,CAAC;AACZQ,MAAAA,SAAS,EAAE;AAAEF,QAAAA,KAAF;AAASC,QAAAA;AAAT;AADC,KAAD,CAAb,CAEGE,IAFH,CAEQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEV,QAAAA;AAAF;AAAR,KAAD,KAAiC;AACvC,UAAIA,aAAa,CAACW,KAAlB,EAAyB;AACvBZ,QAAAA,MAAM,CAAED,IAAD,IAAU,CAACA,IAAZ,CAAN;AACD,OAFD,MAEO;AACLI,QAAAA,cAAc,CAAC;AACbM,UAAAA,SAAS,EAAE;AACTI,YAAAA,KAAK,EAAE,EAAE,GAAGP,MAAL;AAAaQ,cAAAA,UAAU,EAAEhB,IAAI,CAACiB,QAAL,CAAcC;AAAvC;AADE;AADE,SAAD,CAAd,CAKGN,IALH,CAKSC,IAAD,IAAU;AACdf,UAAAA,SAAS,CAACe,IAAD,CAAT;AACD,SAPH,EAQGM,KARH,CAQUC,KAAD,IAAW;AAChBrB,UAAAA,OAAO,CAACqB,KAAD,CAAP;AACD,SAVH;AAWD;AACF,KAlBD;AAmBD,GArBD;;AAuBA,sBACE;AAAO,IAAA,MAAM,EAAE,IAAf;AAAqB,IAAA,OAAO,EAAExB,OAA9B;AAAuC,IAAA,QAAQ,EAAEC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACI,IAAD,iBACC;AACE,IAAA,OAAO,EAAC,+DADV;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAEK,qBAAqB,CAACe,OAAtB,IAAiCjB,oBAAoB,CAACiB,OADjE;AAEE,IAAA,QAAQ,EAAEd,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAeD,CA5CM","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Modal, Alert } from \"antd\";\nimport { EmployerForm } from \"./Form\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATEEMPLOYER, EMPLOYEREXIST } from \"../../../Gql/Mutation\";\nimport { UserContext } from \"../../Context\";\n\nexport const Add = ({ visible, onCancel, onSuccess, onError }) => {\n  const { user } = useContext(UserContext);\n  const [hide, toggle] = useState(true);\n  const [employerExist, employerExistOptions] = useMutation(EMPLOYEREXIST);\n  const [createEmployer, createEmployerOptions] = useMutation(CREATEEMPLOYER);\n\n  const onFinish = (values) => {\n    const { phone, mail } = values;\n    employerExist({\n      variables: { phone, mail },\n    }).then(({ data: { employerExist } }) => {\n      if (employerExist.exist) {\n        toggle((hide) => !hide);\n      } else {\n        createEmployer({\n          variables: {\n            input: { ...values, workshopId: user.workshop.id },\n          },\n        })\n          .then((data) => {\n            onSuccess(data);\n          })\n          .catch((error) => {\n            onError(error);\n          });\n      }\n    });\n  };\n\n  return (\n    <Modal footer={null} visible={visible} onCancel={onCancel}>\n      {!hide && (\n        <Alert\n          message=\"Le numero de téléphone ou le mail est deja utilisé !\"\n          showIcon\n          type=\"info\"\n        />\n      )}\n      <EmployerForm\n        loading={createEmployerOptions.loading || employerExistOptions.loading}\n        onFinish={onFinish}\n      />\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}